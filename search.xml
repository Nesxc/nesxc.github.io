<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>二十分钟精通markdown</title>
    <url>/20minmarkdown.html</url>
    <content><![CDATA[<blockquote>
<p>文字排版神器Markdown的强大功能：图片和链接嵌入、标题系统及目录生成、多平台支持、微信公众号图文消息一键转换、基本语法与编辑工具、视频及地图嵌入等。将你从繁杂的文字图片排版工作中解放出来，专注内容质量本身。知乎、简书、有道云笔记、Github、CSDN、Wordpress、有道云笔记、Gitbook等网站都支持Markdown写作。你也可以通过markdown一键生成微信公众号图文消息的页面，省去在公众号编辑后台一张张上传和插入图片的烦恼。精通markdown只需要二十分钟，学会之后将大大提高你的工作效率。<br><a href="https://www.bilibili.com/video/av35579542">本文配套B站视频：二十分钟精通排版神器Markdown，从此word和秀米是路人</a>        </p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-40ef56b0907b84c8.png%7CimageView2/2/w/600" alt="文字排版"></p>
<p>[TOC]</p>
<h1 id="Word—反人类的富文本编辑器"><a href="#Word—反人类的富文本编辑器" class="headerlink" title="Word—反人类的富文本编辑器"></a>Word—反人类的富文本编辑器</h1><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-0ff5655a5988e7b3.png%7CimageView2/2/w/1240" alt="Word排版"></p>
<p>我极其反感word反人类的排版系统，试问你看到下列字句有什么感受？</p>
<blockquote>
<p>字体、字号、段落、标题、目录、页眉页脚、图片环绕、段间距、首行缩进、批注、嵌入型、四周型、紧密型环绕、上下型环绕、衬于文字下方、……</p>
</blockquote>
<p><strong>比较烦人的是</strong>：图片排版、数学公式编辑、代码编辑、目录生成。</p>
<p><strong>更烦的是</strong>，在word里面辛辛苦苦排好的文章，在别人的电脑上打开，排版经常都会面目全非；用不同版本的word打开，排版也会面目全非；有时候什么都没做，排版自己就面目全非。</p>
<p><strong>更更烦的是</strong>，在微信公众号里发文章，必须把图片一张张上传，文字一段段编辑，图片一张张插入，还要用秀米编辑器，挑选模板、设计样式，再经过手机预览、校对，才能发布。</p>
<p><strong>更更更烦的是</strong>，所有的图片都得保存在word文件中，一个大word文件少则十几M，大则几百M，下载、存储、分享都受很大限制。</p>
<p>这种传统的排版方式，叫做<strong>富文本编辑模式</strong>，所有排版必须经过鼠标一一点击才能设置生效。特别是在编辑微信公众号图文消息时，要用秀米这样的工具对每一个元素逐一排版。</p>
<p><strong>有了Markdown，上述所有问题都可以轻松解决</strong></p>
<h1 id="Markdown—解放生产力的排版神器"><a href="#Markdown—解放生产力的排版神器" class="headerlink" title="Markdown—解放生产力的排版神器"></a>Markdown—解放生产力的排版神器</h1><p><a href="https://www.bilibili.com/video/av35579542">本文配套视频：二十分钟精通排版神器Markdown，从此word和秀米是路人</a>        </p>
<p>Markdown彻底解放了我的写作生产力，彻底省去了费心费力排版的时间，让作者可以专注内容本身。所有博客平台（知乎、简书、CSDN、电子邮件）基本都支持markdown语法写作，所以可以通过文章markdown源码一键保留排版直接跨平台迁移发布。而且微信公众号图文消息也可以由markdown源码一键生成。程序员熟悉的开源代码网站Github，所有项目说明文档全部使用markdown格式撰写。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-8e61552a33d3cb35.png%7CimageView2/2/w/1240" alt="Markdown"></p>
<h2 id="1、众多支持Markdown的写作平台"><a href="#1、众多支持Markdown的写作平台" class="headerlink" title="1、众多支持Markdown的写作平台"></a>1、众多支持Markdown的写作平台</h2><ul>
<li><h3 id="有道云笔记"><a href="#有道云笔记" class="headerlink" title="有道云笔记"></a>有道云笔记</h3></li>
<li><h3 id="知乎"><a href="#知乎" class="headerlink" title="知乎"></a>知乎</h3></li>
<li><h3 id="简书"><a href="#简书" class="headerlink" title="简书"></a>简书</h3></li>
<li><h3 id="所有电子邮箱"><a href="#所有电子邮箱" class="headerlink" title="所有电子邮箱"></a>所有电子邮箱</h3></li>
<li><h3 id="Github：全球最大开源代码托管平台"><a href="#Github：全球最大开源代码托管平台" class="headerlink" title="Github：全球最大开源代码托管平台"></a>Github：全球最大开源代码托管平台</h3></li>
<li><h3 id="CSDN：程序员博客平台"><a href="#CSDN：程序员博客平台" class="headerlink" title="CSDN：程序员博客平台"></a>CSDN：程序员博客平台</h3></li>
<li><h3 id="Wordpress博客"><a href="#Wordpress博客" class="headerlink" title="Wordpress博客"></a>Wordpress博客</h3></li>
<li><h3 id="Typecho博客"><a href="#Typecho博客" class="headerlink" title="Typecho博客"></a>Typecho博客</h3></li>
<li><h3 id="Markdown在线编辑工具"><a href="#Markdown在线编辑工具" class="headerlink" title="Markdown在线编辑工具"></a>Markdown在线编辑工具</h3><p>比如<a href="http://mahua.jser.me/">MaHua：Markdown在线编辑工具</a></p>
</li>
<li><h3 id="Typora：所见即所得的Markdown编辑工具"><a href="#Typora：所见即所得的Markdown编辑工具" class="headerlink" title="Typora：所见即所得的Markdown编辑工具"></a>Typora：所见即所得的Markdown编辑工具</h3></li>
</ul>
<p>作者推荐使用所见即所得的Markdown编辑器：Typora，然后再将文章源代码一键复制到上述平台发布。</p>
<p>你还可以用Typora将写好的Markdown文章轻松转换成PDF文件和HTML文件，转成PDF文件时会自动生成按照标题生成书签和目录，特别棒。</p>
<h2 id="2、代码显示很棒"><a href="#2、代码显示很棒" class="headerlink" title="2、代码显示很棒"></a>2、代码显示很棒</h2><p>针对不同编程语言配备不同的代码高亮和横向滚动条，还可以自己设置背景颜色。</p>
<h3 id="插入Python代码块："><a href="#插入Python代码块：" class="headerlink" title="插入Python代码块："></a>插入Python代码块：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">get = <span class="built_in">input</span>(<span class="string">&#x27;请输入温度&#x27;</span>)</span><br><span class="line">get2 = <span class="built_in">int</span>(get[<span class="number">0</span>:-<span class="number">1</span>])</span><br><span class="line">print(<span class="string">&#x27;数值为&#x27;</span>,get2)</span><br><span class="line"><span class="keyword">if</span> get[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;C&#x27;</span>]:</span><br><span class="line">    print(<span class="string">&#x27;你输入的是摄氏度&#x27;</span>)</span><br><span class="line">    F = get2*<span class="number">1.8</span>+<span class="number">32</span></span><br><span class="line">    print(<span class="string">&#x27;转换为华氏度是&#123;:2f&#125;F&#x27;</span>.<span class="built_in">format</span>(F))</span><br><span class="line"><span class="keyword">elif</span> get[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;F&#x27;</span>]:</span><br><span class="line">    print(<span class="string">&#x27;你输入的是华氏度&#x27;</span>)</span><br><span class="line">    C = (get2-<span class="number">32</span>)/<span class="number">1.8</span></span><br><span class="line">    print(<span class="string">&#x27;转换为摄氏度是&#123;:2f&#125;C&#x27;</span>.<span class="built_in">format</span>(C))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;输入格式有误&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="插入Linux的Shell命令"><a href="#插入Linux的Shell命令" class="headerlink" title="插入Linux的Shell命令"></a>插入Linux的Shell命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cmatrix #安装黑客帝国流水线字符命令</span><br><span class="line">sudo apt-get install opencv-python #安装开源计算机视觉库opencv的python版本</span><br><span class="line">sudo rm -rf /*  #从删库到跑路</span><br></pre></td></tr></table></figure>

<h3 id="插入小代码块："><a href="#插入小代码块：" class="headerlink" title="插入小代码块："></a>插入小代码块：</h3><p>比如：</p>
<p><code>numpy</code>是python用于科学计算的第三方库，你可以通过<code>pip</code>命令安装，也可以通过<code>Anaconda</code>使用。</p>
<p>你可以通过<code>sudo apt-get install cmatrix</code>命令安装黑客帝国流水字符的程序。</p>
<h2 id="3、支持微信公众号图文消息一键转换"><a href="#3、支持微信公众号图文消息一键转换" class="headerlink" title="3、支持微信公众号图文消息一键转换"></a>3、支持微信公众号图文消息一键转换</h2><p><a href="http://blog.didispace.com/tools/online-markdown/">Markdown转微信公众号格式化转换工具</a></p>
<p>关注微信公众号 <strong>人工智能小技巧</strong> 回复 <strong>公众号格式化工具</strong> 也可以看到这个工具的链接。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-c7862f084e93ab0c.png%7CimageView2/2/w/1240" alt="公众号格式化工具"></p>
<h2 id="4、占用存储空间小"><a href="#4、占用存储空间小" class="headerlink" title="4、占用存储空间小"></a>4、占用存储空间小</h2><p>在Markdown中，所有图片、视频、跳转链接、文字、代码块，都是以链接和标签语言的形式存成字符串的，并没有保存图片和视频本身，所以.md文件占用空间特别少，一篇带图片的长文也不过10KB左右。而且可以随时无损导出成PDF格式和HTML格式的文件。</p>
<h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><p>Markdown常用的语法就是下面四个，学会就能包打天下了。</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/259-7424a9a21a2cb81b.jpg%7CimageView2/2/w/815/format/webp" alt="标题"></p>
<h2 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h2><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/259-90ac0f366310f464.jpg%7CimageView2/2/w/1000/format/webp" alt="插入链接和图片"></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/259-438c3424cfbfb029.jpg%7CimageView2/2/w/1000/format/webp" alt="引用"></p>
<h2 id="代码插入"><a href="#代码插入" class="headerlink" title="代码插入"></a>代码插入</h2><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/259-dcf737a97e71cd73.jpg%7CimageView2/2/w/879/format/webp" alt="插入代码"></p>
<h1 id="在Markdown中嵌入HTML页面"><a href="#在Markdown中嵌入HTML页面" class="headerlink" title="在Markdown中嵌入HTML页面"></a>在Markdown中嵌入HTML页面</h1><h2 id="嵌入百度地图"><a href="#嵌入百度地图" class="headerlink" title="嵌入百度地图"></a>嵌入百度地图</h2><p> <a href="http://api.map.baidu.com/lbsapi/creatmap/index.html">百度地图API定制工具</a>    </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;http://118.25.75.221/map2.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://www.shumeipai.wang/">点我看预览效果</a>  </p>
<h2 id="嵌入腾讯视频"><a href="#嵌入腾讯视频" class="headerlink" title="嵌入腾讯视频"></a>嵌入腾讯视频</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://v.qq.com/txp/iframe/player.html?vid=g0024gz9gnl&quot;</span> <span class="attr">allowFullScreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://www.shumeipai.wang/">点我看预览效果</a>     </p>
<h2 id="嵌入Bilibili视频"><a href="#嵌入Bilibili视频" class="headerlink" title="嵌入Bilibili视频"></a>嵌入Bilibili视频</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=35094580&amp;cid=61487124&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://www.shumeipai.wang/">点我看预览效果</a>     </p>
<h1 id="参考文献与扩展阅读"><a href="#参考文献与扩展阅读" class="headerlink" title="参考文献与扩展阅读"></a>参考文献与扩展阅读</h1><blockquote>
<p><a href="https://www.bilibili.com/video/av35579542">本文配套B站视频：二十分钟精通排版神器Markdown，从此word和秀米是路人</a>    </p>
<p><a href="https://www.jianshu.com/p/q81RER">献给写作者的Markdown新手指南</a>  </p>
<p><a href="https://blog.csdn.net/dyc87112/article/details/77417572">如何将Markdown文章轻松地搬运到微信公众号并完美地呈现代码内容</a>   </p>
<p><a href="http://blog.didispace.com/tools/online-markdown/">Markdown一键转微信公众号图文消息工具</a>   </p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>OKR工作法</title>
    <url>/OKR.html</url>
    <content><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/v2-2420fcc1a9e6f2f13bf456ded6c2e616_1440w.jpg" alt="OKR"></p>
<h5 id="OKR的意义"><a href="#OKR的意义" class="headerlink" title="OKR的意义"></a>OKR的意义</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O是Objectives，</span><br><span class="line">KR是Key Results，</span><br><span class="line">OKR就是Objectives and Key Results，即目标与关键结果法。</span><br></pre></td></tr></table></figure>

<p>使用OKR工作法可以协调推进团队任务的进度。</p>
<h5 id="如何推进OKR？"><a href="#如何推进OKR？" class="headerlink" title="如何推进OKR？"></a>如何推进OKR？</h5><p>每周一，团队一起开会盘点OKR，来明确本周具体负责完成哪些任务。可以参考这种四象限OKR展示形式：</p>
<p>本周关注的任务</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">OKR当前状态</span><br><span class="line">P1：订阅系统的建立</span><br><span class="line">P1：Ico的制作</span><br><span class="line">P1：留言板的制作</span><br><span class="line">P2：SEO的优化</span><br><span class="line"></span><br><span class="line">目标：百度谷歌的收录</span><br><span class="line">关键结果：网站的收录（50%）</span><br><span class="line">关键结果：第一个被收录的博客（50%）</span><br><span class="line"></span><br><span class="line">未来四周的计划</span><br><span class="line">优化系统</span><br><span class="line">服务器的提升</span><br><span class="line">备份系统的建立</span><br></pre></td></tr></table></figure>

<p>● 本周关注的任务：列出3~4件最重要的事情，只有本周完成了这几件事，团队的目标才能向前推进；明确这些事的优先级（P表示Plan，P1的优先级大于P2，没有P3或更不重要的事）。</p>
<p>● 未来四周的计划：有哪些事情需要其他团队成员做好准备或支持，都列在这一象限。</p>
<p>● OKR当前的状态：每周讨论你们的信心指数，变高了还是变低了？因为发生了什么导致如此？</p>
<p>● 状态指标：挑出两个影响目标达成的其他因素，简略地用色彩记录它们的变化来关注它们。（例如绿色为好，黄色为警戒，红色为差）当这些因素发生意外时，马上讨论找出应对方案，确保OKR不受影响。</p>
<h5 id="怎么进行OKR"><a href="#怎么进行OKR" class="headerlink" title="怎么进行OKR"></a>怎么进行OKR</h5><p>每周一的会议可以用1/4的时间来讲述进度，剩余时间一起讨论下一步计划，并落实每个人本周的职责。</p>
<p>每周五，召开“胜利会议”，让每个团队都可以展示本周的工作成果，并准备一些酒水饮料和点心等庆祝这些成果。</p>
<p>每周重复这些事情，反复这样“明确责任”-“庆祝胜利”的节奏，就实现了OKR的分步骤落实。</p>
<h5 id="易造成目标无法达成的5个因素"><a href="#易造成目标无法达成的5个因素" class="headerlink" title="易造成目标无法达成的5个因素"></a>易造成目标无法达成的5个因素</h5><p>（1）设置多个目标但没有给目标设定优先级。</p>
<p>（2）缺乏充分沟通，导致团队其他成员没能准确理解目标。</p>
<p>（3）没有做好具体落实目标的计划，只是空谈目标。</p>
<p>（4）没有把时间花在重要的事情上，而去做了许多偏离目标的事情。</p>
<p>（5）轻易放弃。</p>
<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>OKR是一个可以供大到上万人小到我一个人的目标实现工作法。 </p>
]]></content>
      <categories>
        <category>电商</category>
      </categories>
      <tags>
        <tag>OKR</tag>
      </tags>
  </entry>
  <entry>
    <title>解决hexo的error:failed to push some refs to &#39;xxx&#39;</title>
    <url>/errorpush.html</url>
    <content><![CDATA[<p>今天我在日常上传新文档是发现使用 </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure>

<p>的命令时，跳出了这个错误：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">error:</span> <span class="string">failed</span> <span class="string">to</span> <span class="string">push</span> <span class="string">some</span> <span class="string">refs</span> <span class="string">to</span> <span class="string">&#x27;https://e.coding.net/ranhexo/hexo/hexo.git&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="C:\Users\Hr082\AppData\Roaming\Typora\typora-user-images\image-20201219222210846.png" alt="image-20201219222210846"></p>
<p>这个错误其实很简单，是应为同步文件缺失导致的，很明显我们push的hexo静态文件会缺失README.md这个文件，所以我们只需要把远端的README.md文件同步下来或者新建一个readme.md文档即可。</p>
<p>这里我选择新建README.md文档，毕竟这个没有什么用。哈哈哈哈</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219222611.png"></p>
<p>果不其然，在创建了README.md文档后同步就能正常的进行。</p>
<p><img src= "/img/loading.gif" data-lazy-src="C:\Users\Hr082\AppData\Roaming\Typora\typora-user-images\image-20201219222945319.png" alt="image-20201219222945319"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>维护</tag>
      </tags>
  </entry>
  <entry>
    <title>typora教程附下载地址</title>
    <url>/Typany.html</url>
    <content><![CDATA[<h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><ul>
<li>  <a href="#Tutorial_of_markdown_in_Typora_1">Tutorial of markdown in Typora</a></li>
<li><ul>
<li><a href="#_7">创建标题</a><ul>
<li>  <a href="#_15">如何改变文本的样式</a></li>
<li>  <a href="#_62">生成一个适合你的列表</a></li>
<li>  <a href="#_97">如何插入一段漂亮的代码片</a></li>
<li>  <a href="#_115">插入链接与图片</a></li>
<li><ul>
<li><a href="#_117">插入链接</a><ul>
<li>  <a href="#_133">插入图片</a></li>
<li>  <a href="#_140">插入带链接的图片</a></li>
</ul>
</li>
</ul>
</li>
<li>  <a href="#_168">创建一个表格</a></li>
<li><ul>
<li><a href="#_185">设定内容居中、居左、居右</a><ul>
<li>  <a href="#SmartyPants_203">SmartyPants</a></li>
</ul>
</li>
</ul>
</li>
<li>  <a href="#_223">如何创建一个注脚</a></li>
<li>  <a href="#KaTeX_241">KaTeX数学公式</a></li>
<li>  <a href="#_263">甘特图绘制</a></li>
<li>  <a href="#UML__292">UML 图表绘制</a></li>
<li>  <a href="#FLowchart_346">FLowchart流程图绘制</a></li>
<li>  <a href="#_367">导出与导入</a></li>
<li><ul>
<li><a href="#_369">导出</a><ul>
<li>  <a href="#_372">导入</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Tutorial-of-markdown-in-Typora"><a href="#Tutorial-of-markdown-in-Typora" class="headerlink" title="Tutorial of markdown in Typora"></a>Tutorial of markdown in Typora</h1><blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<p><strong>如上所说，这里给大家安利一款高BIG的利器Typora<a href="https://gitee.com/lybbs/img/raw/master/typora-setup-x64.exe" target="_blank">GITEE下载地址</a>，这是一款文艺青年(装逼)必备的用于编写markdown的打造高质量文档的神器，一打开就有被惊艳到，界面设计使用程序猿最爱的极简风格，清新脱俗，出淤泥而不染(**已经彻底沦陷</strong>)，可以让人集中注意力去构思文档的编写而不用被格式问题所烦扰。支持LaTex公式编辑，Mermaid流程图和甘特图绘制等等。**  </p>
<h2 id="创建标题"><a href="#创建标题" class="headerlink" title="创建标题"></a>创建标题</h2><ul>
<li><p>  输入1次#，并按下space后再输入文本，将生成1级标题。</p>
</li>
<li><p>  输入2次#，并按下space后在输入文本，将生成2级标题。</p>
</li>
</ul>
<p>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录，在你想要放置目录的地方码上[TOC]即可生成目录。  </p>
<h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><pre><code>*强调文本* _强调文本_</code></pre>
<p><em>强调文本</em> <em>强调文本</em></p>
<pre><code>**加粗文本** __加粗文本__</code></pre>
<p><strong>加粗文本</strong> <strong>加粗文本</strong></p>
<pre><code>==标记文本==</code></pre>
<p>标记文本</p>
<pre><code>~~删除文本~~</code></pre>
<p>删除文本</p>
<pre><code>&gt;引用文本</code></pre>
<blockquote>
<p>引用文本</p>
</blockquote>
<pre><code>H~2~o 是液体</code></pre>
<p>H2O 是液体。</p>
<pre><code>2^10^运算结果是1024</code></pre>
<p>210 运算结果是 1024.</p>
<blockquote>
<p>attention: 要实现上面这些也行需要在file-&gt;preference里面进行设置</p>
</blockquote>
<h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><pre><code>- 项目
  - 项目
    - 项目</code></pre>
<ul>
<li><p>项目</p>
<ul>
<li>项目<ul>
<li>  项目</li>
</ul>
</li>
</ul>
<ol>
<li>项目1</li>
<li>项目2</li>
<li>项目3</li>
</ol>
</li>
</ul>
<ol>
<li><p> 项目1</p>
</li>
<li><p> 项目2</p>
</li>
<li><p>项目3</p>
<ul>
<li><input disabled="" type="checkbox"> 计划任务</li>
</ul>
</li>
</ol>
<ul>
<li><p> 计划任务</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 完成任务</li>
</ul>
</li>
<li><p>   完成任务</p>
</li>
</ul>
<h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>展示同样高亮的 <code>代码片</code>.</p>
<pre><code><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">&#x27;bar&#x27;</span>;</span><br></pre></td></tr></table></figure>


// An highlighted block
var foo = &#39;bar&#39;;
12</code></pre>
<h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><h3 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h3><pre><code>链接:[link](https://www.cnblogs.com/coding-fun).</code></pre>
<p>链接: <a href="https://www.cnblogs.com/coding-fun">link</a>.</p>
<ul>
<li><p>插入链接还有一个方便快捷的方式[link][num],其中num就是数字，例如[link]<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">1</a>，然后在文末贴出[num]到链接的映射如[1]:<a href="https://www.cnblogs.com/coding-fun">https://www.cnblogs.com/coding-fun</a></p>
<p>  [link][1]</p>
</li>
</ul>
<p><a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">link</a></p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><pre><code>图片: ![Xun](https://raw.githubusercontent.com/tracy-talent/Notes/master/imgs/April_Xun.jpg)</code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tracy-talent/Notes/master/imgs/April_Xun.jpg" alt="Xun"></p>
<h3 id="插入带链接的图片"><a href="#插入带链接的图片" class="headerlink" title="插入带链接的图片"></a>插入带链接的图片</h3><ul>
<li><p>还可以给图片加上链接，但是Typera不支持给图片加链接的markdown语法，为知笔记是支持的，也可能是我姿势不对吧，所以在Typora里面我都是用html代码来给图片加链接，下面分别给出这两种方式代码:</p>
<p>  //markdown<br>  <a href="https://blog.csdn.net/tracy1talent"><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tracy-talent/Notes/master/imgs/April_Xun.jpg" alt="Xun" title="Xun"></a></p>
</li>
</ul>
<pre><code>//HTML
&lt;div align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://blog.csdn.net/tracy1talent&quot;&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/tracy-talent/Notes/master/imgs/April_Xun.jpg&quot; title=&quot;Xun&quot;&gt;
 &lt;/a&gt;
&lt;/div&gt;
123456</code></pre>
<p> <a href="https://blog.csdn.net/tracy1talent"><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tracy-talent/Notes/master/imgs/April_Xun1.jpg" title="Xun"></a> </p>
<ul>
<li>  除了代码方式外还可以以拖拽方式上传图片。</li>
</ul>
<h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：</p>
<pre><code>项目 | Value
-------- | -----
电脑 | $1600
手机 | $12
导管 | $1</code></pre>
<p>项目</p>
<p>Value</p>
<p>电脑</p>
<p>$1600</p>
<p>手机</p>
<p>$12</p>
<p>导管</p>
<p>$1</p>
<h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><ul>
<li><p>  使用<code>:---------:</code>居中</p>
</li>
<li><p>  使用<code>:----------</code>居左</p>
</li>
<li><p>  使用<code>----------:</code>居右</p>
</li>
</ul>
<pre><code>|     第一列     |         第二列 | 第三列         |
| :------------: | -------------: | :------------- |
| 第一列文本居中 | 第二列文本居右 | 第三列文本居左 |</code></pre>
<p>第一列</p>
<p>第二列</p>
<p>第三列</p>
<p>第一列文本居中</p>
<p>第二列文本居右</p>
<p>第三列文本居左</p>
<h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p>
<pre><code>| TYPE |ASCII |HTML |                      
|----------------|-------------------------------|-----------------------------|
|Single backticks|`&#39;Isn&#39;t this fun?&#39;` |&#39;Isn&#39;t this fun?&#39; |
|Quotes |`&quot;Isn&#39;t this fun?&quot;` |&quot;Isn&#39;t this fun?&quot; |
|Dashes |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash|</code></pre>
<p>TYPE</p>
<p>ASCII</p>
<p>HTML</p>
<p>Single backticks</p>
<p><code>&#39;Isn&#39;t this fun?&#39;</code></p>
<p>‘Isn’t this fun?’</p>
<p>Quotes</p>
<p><code>&quot;Isn&#39;t this fun?&quot;</code></p>
<p>“Isn’t this fun?”</p>
<p>Dashes</p>
<p><code>-- is en-dash, --- is em-dash</code></p>
<p>– is en-dash, — is em-dash</p>
<h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><pre><code>一个具有注脚的文本。[^1]</code></pre>
<ul>
<li><p>一个具有注脚的文本。<a href="#fn1">1</a></p>
<p>  [^1]: 注脚的解释</p>
</li>
<li><p>  注脚写在文中但被markdown解析后会放在文末</p>
</li>
</ul>
<h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><ul>
<li><p>可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p>
<p>  Gamma公式展示 Γ ( n ) = ( n − 1 ) ! ∀ n ∈ N \Gamma(n) = (n-1)!\quad\forall n\in\mathbb N Γ(n)=(n−1)!∀n∈N 是通过欧拉积分</p>
</li>
</ul>
<pre><code>$$
\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,.
$$</code></pre>
<p>Γ ( z ) = ∫ 0 ∞ t z − 1 e − t d t &ThinSpace; . \Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,. Γ(z)=∫0∞tz−1e−tdt.</p>
<blockquote>
<p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p>
</blockquote>
<h2 id="甘特图绘制"><a href="#甘特图绘制" class="headerlink" title="甘特图绘制"></a>甘特图绘制</h2><pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成 :done, des1, 2014-01-06,2014-01-08</span><br><span class="line">        进行中 :active, des2, 2014-01-09, 3d</span><br><span class="line">        计划一 : des3, after des2, 5d</span><br><span class="line">        计划二 : des4, after des3, 5d</span><br></pre></td></tr></table></figure></code></pre>
<p>Mon 06 Mon 13 Mon 20 已完成 进行中 计划一 计划二 现有任务 Adding GANTT diagram functionality to mermaid</p>
<blockquote>
<p>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</p>
</blockquote>
<h2 id="UML-图表绘制"><a href="#UML-图表绘制" class="headerlink" title="UML 图表绘制"></a>UML 图表绘制</h2><ul>
<li><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?</span><br><span class="line">李四--&gt;&gt;王五: 你最近怎么样，王五？</span><br><span class="line">李四--x 张三: 我很好，谢谢!</span><br><span class="line">李四-x 王五: 我很好，谢谢!</span><br><span class="line">Note right of 王五: 李四想了很长时间, 文字太长了&lt;br&#x2F;&gt;不适合放在一行.</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 打量着王五...</span><br><span class="line">张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</span><br></pre></td></tr></table></figure>


</li>
</ul>
<p>张三 李四 王五 你好！李四, 最近怎么样? 你最近怎么样，王五？ 我很好，谢谢! 我很好，谢谢! 李四想了很长时间, 文字太长了 不适合放在一行. 打量着王五… 很好… 王五, 你怎么样? 张三 李四 王五</p>
<ul>
<li><p>这将产生一个流程图:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class="line">A --&gt; C(圆角长方形)</span><br><span class="line">B --&gt; D&#123;菱形&#125;</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></table></figure>


</li>
</ul>
<p>链接</p>
<p>长方形</p>
<p>圆</p>
<p>圆角长方形</p>
<p>菱形</p>
<blockquote>
<p>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</p>
</blockquote>
<h2 id="FLowchart流程图绘制"><a href="#FLowchart流程图绘制" class="headerlink" title="FLowchart流程图绘制"></a>FLowchart流程图绘制</h2><ul>
<li>  Typora目前不支持flowchart的渲染，这里仅给出一个示例代码</li>
</ul>
<p>Created with Raphaël 2.2.0 开始 我的操作 确认？ 结束 yes no</p>
<blockquote>
<p>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/">这儿</a>.</p>
</blockquote>
<h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>当你完成了一篇文章的写作, 在左上方工具栏找到 <strong>文件-&gt;导出</strong> ，选择一个你想要的文件格式进行本地保存，支持导出HTML，LaTex，PDF，Word等等。</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>文件导入部分需要下载Pandoc插件用于文件转换，平时写markdown文档没用到导入这个模块，所以也不了解具体的导入细节。</p>
<hr>
<ol>
<li> 这是一个注脚解释 <a href="#fnref1">↩︎</a></li>
</ol>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo主题配置整合包发布</title>
    <url>/hexo-ran.html</url>
    <content><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="https://ss.im5i.com/2020/12/03/image.png" alt="image.png"></p>
<h1 id="hexo-ran"><a href="#hexo-ran" class="headerlink" title="hexo-ran"></a>hexo-ran</h1><p>预览: 👍 <a href="https://www.ranas.cn/">Ran</a><br>文檔: 📖 <a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly Docs</a><br>项目地址: <a href="https://github.com/Ran08/hexo-ran/">Hexo-Ran</a></p>
<p>  本整合包是基于<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-butterfly</a>整合而来的整合包</p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="Git-安裝"><a href="#Git-安裝" class="headerlink" title="Git 安裝"></a>Git 安裝</h3><p>新建一个blog文件夹，在里面直接运行:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">clone</span> <span class="string">https://github.com/Ran08/hexo-ran.git</span></span><br></pre></td></tr></table></figure>
<h3 id="exe安装"><a href="#exe安装" class="headerlink" title="exe安装"></a>exe安装</h3><p>打开提供的exe程序，将文件安装在你的hexo博客目录即可<br><a href="https://github.com/Ran08/hexo-ran/releases/download/V0.1/hexo-ran.exe" target="_blank">点击下载</a><br>下载直连github  </p>
<h2 id="前置NPM插件"><a href="#前置NPM插件" class="headerlink" title="前置NPM插件"></a>前置NPM插件</h2><blockquote>
<p>如果需要删除，把install更为uninstall即可。<br>pug以及stylus的渲染器</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-renderer-pug</span> <span class="string">hexo-renderer-stylus</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a>本地搜索</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-searchdb</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> RSS</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-feed</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-sitemap</a> sitemap生成</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-sitemap</span> <span class="string">--save</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-baidu-sitemap</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a> 看板娘</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-helper-live2d</span></span><br></pre></td></tr></table></figure>
<blockquote>
<h3 id="整合包的好处"><a href="#整合包的好处" class="headerlink" title="整合包的好处"></a>整合包的好处</h3></blockquote>
<blockquote>
<p>1.对于小白更加的友好。<br>2.即装即用。<br>3.稳定不易出错。</p>
</blockquote>
<h2 id="本站的-config-butterfly-yml正在全面汉化。"><a href="#本站的-config-butterfly-yml正在全面汉化。" class="headerlink" title="本站的_config.butterfly.yml正在全面汉化。"></a>本站的_config.butterfly.yml正在全面汉化。</h2>]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>hexo-ran</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo和Github Actions自动化博客更新</title>
    <url>/hexogithub.html</url>
    <content><![CDATA[<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?bvid=BV1XV411r7TG&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe>
</div>

<h3 id="本视频搬运自-B站-迈克要长肉"><a href="#本视频搬运自-B站-迈克要长肉" class="headerlink" title="本视频搬运自 B站 迈克要长肉"></a>本视频搬运自 B站 迈克要长肉</h3>]]></content>
      <categories>
        <category>视频推荐</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo建立一个独立的html页面</title>
    <url>/hexohtml.html</url>
    <content><![CDATA[<pre><code>Hexo 是一个轻量、快速，简单和强大的博客框架，当我们需要发布博文的时候，只需要将写好的文章（MarkDown文件）放入本地的 `\source\_posts` 文件夹，然后再推送上去就行了，原理就是当我们在执行 `hexo g` 命令时，`.md` 文件就会被转化成 HTML 文件，但是有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</code></pre>
<h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><pre><code>使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 `_config.yml` 里找到 `skip_render` 关键字，在后面添加想要跳过渲染的页面，比如我们创建 `\source\about\index.html`， 配置文件填写：`skip_render: about\**`，那么就表示 `\source\about` 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：https://hexo.io/docs/configuration</code></pre>
<h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><pre><code>在文章头部的 Front-matter 里添加配置 `layout: false` 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 `\source\about\index.md`，将这个页面的相关 HTML 代码写进`.md`文件并保存，然后在 `index.md` 的头部写入：

---
layout: false
---

    xxxxxxxxxxxxx
    xx HTML代码 xx
    xxxxxxxxxxxxx
    </code></pre>
<p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter">https://hexo.io/docs/front-matter</a><br><code>.md</code>文件中的 HTML 代码要用 <code>` 和 `</code> 包起来，使其能正确编译里面的代码</p>
<p>效果以我的<a href="https://www.ranas.cn/">博客</a>中的<a href="https://www.ranas.cn/qn/">晴女页面</a>为例：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201220201300.png"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>客户分析-价格段的选取</title>
    <url>/khfx.html</url>
    <content><![CDATA[<p>我们在对产品定位时不仅要通过产品进行定位，也要从客户方面进行定位。</p>
<h3 id="首先我们要看：客户购买时会考虑什么因素？"><a href="#首先我们要看：客户购买时会考虑什么因素？" class="headerlink" title="首先我们要看：客户购买时会考虑什么因素？"></a>首先我们要看：客户购买时会考虑什么因素？</h3><p>我们在购买一款产品时，无法就会关注两点 1.价格 2.品牌。</p>
<p>而此时，如果我们店铺没有品牌和价格优势。就会陷入一个非常被动的场面，而此时我们就要进行<strong>价格区间</strong>的调整。</p>
<h3 id="什么是价格区间"><a href="#什么是价格区间" class="headerlink" title="什么是价格区间"></a>什么是价格区间</h3><p>价值区间就是指在某个时间段,由产品在市场上的流通量和资金的变化所决定的变动范围。</p>
<p>价格区间有什么<strong>用</strong>？</p>
<ul>
<li> 区分不同的客户人群。</li>
</ul>
<p>例如，一件衣服的三个价格区间为：100-200、200-500、500-1000那么：</p>
<p>100-200的客户可能会在产品质量和性价比上做关注。</p>
<p>200-500的客户可能会在外观上有要求。</p>
<p>500-1000的客户会有比较全方面的要求。</p>
<p>同样，价格区间还把你的客户分为了3个<strong>人群</strong></p>
<p>100-200的客户可能是普通的民众。</p>
<p>200-500的客户可能是有一定消费能力的从业者。</p>
<p>500-1000的客户会是中产、高级从业者。</p>
<h3 id="那么怎么寻找“价格区间”？"><a href="#那么怎么寻找“价格区间”？" class="headerlink" title="那么怎么寻找“价格区间”？"></a>那么怎么寻找“价格区间”？</h3><p>举例说明：小提琴中高端市场<strong>179-413</strong>元，</p>
<p>[<img src= "/img/loading.gif" data-lazy-src="https://ss.im5i.com/2020/11/20/1605856519.png" alt="1605856519.png">]</p>
<p>那么平均价格=（179+431）÷2=305；</p>
<p>305-179=126；431-305=126</p>
<p>区间价格的20%浮动 126*0.3=37.8</p>
<p>305+37.8=342.8；305-37.8=267.5</p>
<p>267作为一个区间相对低点参考；342作为一个区间相对高点；</p>
<p>（当要进行较大幅度竞争则直接中间点642.5浮动+-20%）</p>
<h3 id="找到了价格区间那么我们会有竞争力吗？"><a href="#找到了价格区间那么我们会有竞争力吗？" class="headerlink" title="找到了价格区间那么我们会有竞争力吗？"></a>找到了价格区间那么我们会有竞争力吗？</h3><p>不，这个价格段包含了很多产品，我们还要看同行的价格。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://ss.im5i.com/2020/11/20/16058568751.png" alt="16058568751.png"></p>
<p>同行的价格也能给予很大的参考。通过对比价格，参数，品牌等。寻找一个适合自己的价格段才是最重要的。</p>
<h5 id="价格维度考虑要素有以下几点"><a href="#价格维度考虑要素有以下几点" class="headerlink" title="价格维度考虑要素有以下几点"></a>价格维度考虑要素有以下几点</h5><p>（1）中小卖家不能再迷信自己有核心竞争力，充其量也就是局部竞争力</p>
<p>（2）中小卖家局部优势要发挥到极致，选取最合理的点</p>
<p>（3）底价冲量做法目前并不是最先选取的参考点</p>
<p>（4）目标价格带的中间点是中小卖家优先选取的参考点；一般空白价格段更具与竞争空间</p>
<p>（5）20%作为一个经验参考点可供测试（注意金额变大超过1000元的波动应当适当加大调成30%-35%）</p>
<p>（6）可以到不同价格带找典型的参考卖家</p>
<p>（7）看评价数据，买家好评原因，差评不能满足客户要求的原因，做到人无我有突出我们的主要竞争力，我们的优势，识别出最终客户（精准客户）</p>
<p>（8）通过（供应链、资金、人才能力、风险承受能力）来选择适合自己的竞争参考系</p>
<p>（9）发现自己的局部优势来定价</p>
<h3 id="那怎么在同价格段能够领先同行？"><a href="#那怎么在同价格段能够领先同行？" class="headerlink" title="那怎么在同价格段能够领先同行？"></a>那怎么在同价格段能够领先同行？</h3><h4 id="那就要说到高低认知的部分了"><a href="#那就要说到高低认知的部分了" class="headerlink" title="那就要说到高低认知的部分了"></a>那就要说到高低认知的部分了</h4><p>（1）低认知：品牌、价格、差异化卖点-能让客户一见钟情</p>
<p>（2）高认知：参数、属性、评测、细节—属于细水长流工作能让客户日久生情</p>
<p>我们中小卖家可以通过一些市场上目前所不具备的卖点进行打造产品。然后通过问大家、评价等方式积攒口碑以及买家信任度来领先同行。</p>
]]></content>
      <categories>
        <category>电商</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>教你在树莓派上安装OpenCV</title>
    <url>/smpOpenCV.html</url>
    <content><![CDATA[<h1 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h1><h3 id="1-配置好树莓派的Raspbian操作系统"><a href="#1-配置好树莓派的Raspbian操作系统" class="headerlink" title="1.配置好树莓派的Raspbian操作系统"></a>1.配置好树莓派的Raspbian操作系统</h3><p>本教程使用的系统是2018年6月27日树莓派官方发布的Raspbian-stretch操作系统，<a href="https://www.raspberrypi.org/downloads/raspbian/">官方下载链接</a>。</p>
<h3 id="2-切换到国内的apt-get下载源和pip下载源"><a href="#2-切换到国内的apt-get下载源和pip下载源" class="headerlink" title="2.切换到国内的apt-get下载源和pip下载源"></a>2.切换到国内的apt-get下载源和pip下载源</h3><p>防止下载速度过慢。</p>
<h3 id="3-如果你有树莓派官方的摄像头Picamera，需按如下方法正确配置"><a href="#3-如果你有树莓派官方的摄像头Picamera，需按如下方法正确配置" class="headerlink" title="3.如果你有树莓派官方的摄像头Picamera，需按如下方法正确配置"></a>3.如果你有树莓派官方的摄像头Picamera，需按如下方法正确配置</h3><blockquote>
<p>如果没有官方摄像头，也不影响安装</p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-4b420067401c12f1.png%7CimageView2/2/w/400" alt="连接树莓派摄像头Picamera"></p>
<p>在命令行输入以下命令，这个命令的意思是用nano编辑器打开modules这个文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/modules</span><br></pre></td></tr></table></figure>

<p>在这个文件末尾添加一行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bcm2835-v4l2</span><br></pre></td></tr></table></figure>

<p>也就是这个效果</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-364a600885dd8cdf.png%7CimageView2/2/w/1240"></p>
<p>先按键盘上的<code>ctrl</code>+<code>o</code>，再按回车保存，再按<code>ctrl</code>+<code>x</code>退出nano编辑器回到命令行界面。</p>
<p>输入命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vcgencmd get_camera</span><br></pre></td></tr></table></figure>

<p>如果得到下面的结果，则证明摄像头连接成功</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-07e411efaac25994.png%7CimageView2/2/w/1240" alt="检查摄像头是否被树莓派识别"></p>
<p>可以输入命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">raspistill -o image.jpg</span><br></pre></td></tr></table></figure>

<p>调用摄像头拍一张照片，命名为image.jpg，存储在/pi/home路径，也就是桌面左上角资源管理器一打开显示的那个路径。如果能看到摄像头上红灯亮，目录里面有照片，则进一步说明摄像头配置正确。</p>
<h1 id="在树莓派安装运行在Python2上的OpenCV"><a href="#在树莓派安装运行在Python2上的OpenCV" class="headerlink" title="在树莓派安装运行在Python2上的OpenCV"></a>在树莓派安装运行在Python2上的OpenCV</h1><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p> 打开树莓派的命令行界面，两个命令即可完成安装。执行第一条命令需要半个小时左右，请耐心等待。第二条命令执行只需要几秒钟。</p>
<blockquote>
<p>友情提示：</p>
<p>建议第一个命令用树莓派桌面上自带的命令行工具运行，而不要使用远程ssh连接。因为执行命令时间太长，中途如果ssh断线的话无法得知是否已经安装完毕。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libopencv-dev</span><br><span class="line">sudo apt-get install python-opencv</span><br></pre></td></tr></table></figure>

<h3 id="2、在Python2上测试OpenCV"><a href="#2、在Python2上测试OpenCV" class="headerlink" title="2、在Python2上测试OpenCV"></a>2、在Python2上测试OpenCV</h3><p>安装好之后，在命令行中输入<code>python</code>或者<code>python2</code>，回车</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br></pre></td></tr></table></figure>

<p>如果出现下图的结果，说明Python2环境下的OpenCV安装成功。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-202da54ab2900054.png%7CimageView2/2/w/1240" alt="python2环境中运行opencv"></p>
<p>也可以输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.__version__</span><br></pre></td></tr></table></figure>

<p>查看opencv版本号</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-f97eed06c60e3c03.png%7CimageView2/2/w/1240" alt="查看python2的opencv版本"></p>
<blockquote>
<p>为啥叫cv2而不叫opencv呢？这是因为OpenCV是基于C/C++开发的，有两个版本，’’cv”版本的API是C语言开发的，’’cv2’’版本的API是基于C++语言开发的，为了保持向后兼容性所以叫”cv2”，但我们都知道cv2就是OpenCV本尊。</p>
</blockquote>
<p>也可以在桌面命令行里输入以下三个命令调用树莓派摄像头，把摄像头捕捉到的画面显示在桌面上，按<code>ctrl</code>+<code>c</code>键退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/TommyZihao/opencvtest.git</span><br><span class="line">cd opencvtest</span><br><span class="line">python2 testopencv.py</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-4558d79be1004043.png%7CimageView2/2/w/1240" alt="测试python2上的opencv：调用树莓派摄像头"></p>
<h1 id="在树莓派安装运行在Python3上的OpenCV"><a href="#在树莓派安装运行在Python3上的OpenCV" class="headerlink" title="在树莓派安装运行在Python3上的OpenCV"></a>在树莓派安装运行在Python3上的OpenCV</h1><h3 id="1、安装numpy"><a href="#1、安装numpy" class="headerlink" title="1、安装numpy"></a>1、安装numpy</h3><p>打开命令行界面，输入以下命令，安装Python科学计算库numpy</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pip3 install numpy</span><br></pre></td></tr></table></figure>

<h3 id="2、在树莓派设置中把根目录扩大到整个SD卡"><a href="#2、在树莓派设置中把根目录扩大到整个SD卡" class="headerlink" title="2、在树莓派设置中把根目录扩大到整个SD卡"></a>2、在树莓派设置中把根目录扩大到整个SD卡</h3><p>命令行界面输入命令，进入树莓派配置界面。用上下键和左右键切换光标位置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-59742b839ab0c666.png%7CimageView2/2/w/1240" alt="树莓派配置界面"></p>
<h4 id="第七行：Advanced-Options"><a href="#第七行：Advanced-Options" class="headerlink" title="第七行：Advanced Options"></a>第七行：Advanced Options</h4><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1d3bb4659426dce8.png%7CimageView2/2/w/1240" alt="Adcanved Options"></p>
<p>选择Expand Filesystem，将根目录扩展到这个SD卡，充分利用SD卡的存储空间。如果不进行这一步，后续命令会出现卡死。退出设置界面，重启树莓派。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<h3 id="3、安装OpenCV所需的库"><a href="#3、安装OpenCV所需的库" class="headerlink" title="3、安装OpenCV所需的库"></a>3、安装OpenCV所需的库</h3><p>挨个运行下面八条命令。共需要七分钟（注意倒数第三条命令中要安装四个-dev软件包）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential git cmake pkg-config -y</span><br><span class="line">sudo apt-get install libjpeg8-dev -y</span><br><span class="line">sudo apt-get install libtiff5-dev -y</span><br><span class="line">sudo apt-get install libjasper-dev -y</span><br><span class="line">sudo apt-get install libpng12-dev -y</span><br><span class="line"></span><br><span class="line">sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev -y</span><br><span class="line"></span><br><span class="line">sudo apt-get install libgtk2.0-dev -y</span><br><span class="line">sudo apt-get install libatlas-base-dev gfortran -y</span><br></pre></td></tr></table></figure>

<h3 id="4、下载OpenCV"><a href="#4、下载OpenCV" class="headerlink" title="4、下载OpenCV"></a>4、下载OpenCV</h3><p>在命令行输入以下三条命令，下载两个压缩包到树莓派的**/home/pi/Downloads**目录下。第一个压缩包86.8MB，第二个压缩包54.5MB：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line"></span><br><span class="line">wget https://github.com/Itseez/opencv/archive/3.4.0.zip</span><br><span class="line"></span><br><span class="line">wget https://github.com/Itseez/opencv_contrib/archive/3.4.0.zip</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果下载速度很慢（比如每秒几个KB）：</p>
<p>方法1：可以在电脑浏览器中输入wget后面的链接下载压缩包，再用Fillzilla或者U盘等方法把文件传输到树莓派的**/home/pi/Downloads**目录下（一定不能错）。</p>
<p>方法2：:可以用电脑在<a href="https://pan.baidu.com/s/182NYJzW1nCpnQ7ftSYYuSw">百度网盘链接</a>下载这两个压缩包之后再用Fillzilla或者U盘等方法把文件传输到树莓派的**/home/pi/Downloads**目录下（一定不能错）。</p>
</blockquote>
<p>解压这两个压缩包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/pi/Downloads</span><br><span class="line">unzip opencv-3.4.0.zip</span><br><span class="line">unzip opencv_contrib-3.4.0.zip</span><br></pre></td></tr></table></figure>

<h3 id="5、设置编译参数"><a href="#5、设置编译参数" class="headerlink" title="5、设置编译参数"></a>5、设置编译参数</h3><p>设置编译参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/pi/Downloads/opencv-3.4.0</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure>

<p>设置CMAKE参数，注意，下面这是一行命令（包括最后那俩点儿），需要耐心等待十五分钟左右：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=/home/pi/Downloads/opencv_contrib-3.4.0/modules -D BUILD_EXAMPLES=ON -D WITH_LIBV4L=ON PYTHON3_EXECUTABLE=/usr/bin/python3.5 PYTHON_INCLUDE_DIR=/usr/include/python3.5 PYTHON_LIBRARY=/usr/lib/arm-linux-gnueabihf/libpython3.5m.so PYTHON3_NUMPY_INCLUDE_DIRS=/home/pi/.local/lib/python3.5/site-packages/numpy/core/include ..</span><br></pre></td></tr></table></figure>

<p>根据下图判断你是否配置成功了CMAKE。如果失败，可能是因为两个压缩包的路径没有严格按照上文的要求。如果成功，就可以开始最重要的编译了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-532012bb713dc869.png%7CimageView2/2/w/1240" alt="CMAKE配置"></p>
<h3 id="6、编译"><a href="#6、编译" class="headerlink" title="6、编译"></a>6、编译</h3><p>最后一步，也是最重要的一步：编译</p>
<p>保证树莓派有至少5G的存储空间，建议本命令用树莓派桌面上的命令行工具运行，而不要使用远程ssh连接。因为执行命令时间太长，中途如果ssh断线的话无法得知是否已经安装完毕。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/pi/Downloads/opencv-3.4.0/build</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-36df3d7c4c6c0db7.png%7CimageView2/2/w/1240" alt="开始编译"></p>
<p>编译两个小时之后，完成了40%</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e938295662efec1e.png%7CimageView2/2/w/1240" alt="编译两个小时之后"></p>
<p>静待五个小时的编译。注意，在此期间，树莓派要供电充足，不要运行其它任务，以免因为内存不够什么的幺蛾子报错。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-542b34f0f59da291.png%7CimageView2/2/w/1240" alt="编译完成"></p>
<p><code>make</code>命令执行完成之后，执行下面的命令，执行命令需要一分钟：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo make insall</span><br></pre></td></tr></table></figure>

<h3 id="7、在Python3上测试OpenCV"><a href="#7、在Python3上测试OpenCV" class="headerlink" title="7、在Python3上测试OpenCV"></a>7、在Python3上测试OpenCV</h3><p>安装好之后，在命令行中输入<code>python3</code>，回车</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br></pre></td></tr></table></figure>

<p>回车</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cv2.__version__</span><br></pre></td></tr></table></figure>

<p>回车</p>
<p>如果出现下图的结果，说明Python3环境下的OpenCV安装成功。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-8b4162cec9589cd6.png%7CimageView2/2/w/1240" alt="Python3的OpenCV安装完成"></p>
<h1 id="参考文献与扩展阅读"><a href="#参考文献与扩展阅读" class="headerlink" title="参考文献与扩展阅读"></a>参考文献与扩展阅读</h1><blockquote>
<p><a href="https://www.jianshu.com/p/3180a253fe3c">【树莓派】树莓派+OpenCV3.4 + python3.5 成功以及注意细节</a></p>
<p><a href="https://blog.csdn.net/u014397533/article/details/50910531">树莓派安装Python-OpenCV</a></p>
<p> <a href="https://www.cnblogs.com/Pyrokine/p/8921285.html">基于树莓派3B+Python3.5的OpenCV3.4的配置教程</a></p>
</blockquote>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>在树莓派上安装BOINC并参与SETI@home分布式计算项目</title>
    <url>/smpbtb.html</url>
    <content><![CDATA[<h2 id="1-在树莓派上安装BOINC客户端"><a href="#1-在树莓派上安装BOINC客户端" class="headerlink" title="1.在树莓派上安装BOINC客户端"></a>1.在树莓派上安装BOINC客户端</h2><p>仅需要一行命令即可在树莓派或者Ubuntu操作系统上安装BOINC</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install boinc-client boinc</span><br></pre></td></tr></table></figure>

<p>在跳出的对话框中输入<code>y</code>和回车<code>↩</code>，确定下载安装，需要64MB存储空间。</p>
<p>安装成功之后，打开树莓派桌面（或者使用VNC远程桌面），在“系统工具”中点击“BOINC Manager”。</p>
<h3 id="2-选择你想参加的分布式计算项目"><a href="#2-选择你想参加的分布式计算项目" class="headerlink" title="2.选择你想参加的分布式计算项目"></a>2.选择你想参加的分布式计算项目</h3><p>选择SETI@home，点击“下一步“</p>
<p>BOINC平台上各领域有趣的分布式计算项目详细介绍见后文。</p>
<h3 id="3-注册新账号或登陆已有账号"><a href="#3-注册新账号或登陆已有账号" class="headerlink" title="3.注册新账号或登陆已有账号"></a>3.注册新账号或登陆已有账号</h3><h3 id="4-自动从项目服务器上获取数据，开始计算"><a href="#4-自动从项目服务器上获取数据，开始计算" class="headerlink" title="4.自动从项目服务器上获取数据，开始计算"></a>4.自动从项目服务器上获取数据，开始计算</h3><p>现在，你的树莓派就开始自动计算并把数据发回项目服务器了，大功告成。</p>
<p>树莓派性能远不及平常电脑，计算一个数据包需要19个小时，而普通笔记本电脑计算一个数据包仅需3个小时。</p>
<p>而且树莓派上运行SETI@home不能看到本项目标志性的高大上信号处理屏幕保护图片，</p>
<p>通过以下设置修改计算参数，防止CPU资源被全部占用，或CPU过烫</p>
<p>在命令行中输入以下命令查看实时CPU温度，在全速运行计算项目时CPU温度可能会达到100摄氏度以上，应密切注意CPU温度并调整适当计算参数。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vcgencmd measure_temp</span><br></pre></td></tr></table></figure>


<h2 id="BOINC平台上各领域有趣的分布式计算项目详细介绍"><a href="#BOINC平台上各领域有趣的分布式计算项目详细介绍" class="headerlink" title="BOINC平台上各领域有趣的分布式计算项目详细介绍"></a>BOINC平台上各领域有趣的分布式计算项目详细介绍</h2><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-3e2ec8af4186e54c.png" alt="BOINC平台上的科学计算项目"></p>
<h3 id="几个比较经典的项目"><a href="#几个比较经典的项目" class="headerlink" title="几个比较经典的项目:"></a>几个比较经典的项目:</h3><ul>
<li><h4 id="天文及物理"><a href="#天文及物理" class="headerlink" title="天文及物理"></a>天文及物理</h4></li>
<li><p>SETI@home：分析阿雷西博射电望远镜的海量数据，寻找可能的地外文明信号。</p>
</li>
<li><p>Einsten@home：分析LIGO和GEO600采集的海量观测数据，寻找引力波存在的证据。分析阿雷西博射电望远镜和费米伽马射线卫星传来的数据寻找脉冲星和中子星。由威斯康星大学密尔沃基分校发起。</p>
</li>
<li><p>Milkyway@home：使用Sloan数字巡天的数据来对银河系进行高精度的三维建模。</p>
</li>
<li><p>LHC@home：大型强子对撞机（LHC）是 CERN（欧洲核子研究组织）的一个粒子加速器装置，也是世界上最大的粒子物理实验室。它是人类现有的用于研究基本粒子特性的最强大的实验装置。LHC@home 的作用主要是对加速器进行模拟，并帮助改进 LHC 及其探测器的设计。</p>
</li>
<li><p>Cosmology@Home：寻找描述宇宙演化的数学模型。由UIUC大学发起。</p>
</li>
<li><p>Asteroids@home：研究小行星形状、自转周期、自转轴信息。</p>
</li>
<li><p>Universe@home：创建宇宙天体数据库，从最初的恒星到奇特的黑洞双星。</p>
</li>
<li><h4 id="地球物理"><a href="#地球物理" class="headerlink" title="地球物理"></a>地球物理</h4></li>
<li><p>Climateprediction.net：牛津大学发起，旨在优化现有大气模型对二氧化碳、硫循环等的敏感程度。预测未来全球气候变化。</p>
</li>
<li><h4 id="生物信息学"><a href="#生物信息学" class="headerlink" title="生物信息学"></a>生物信息学</h4></li>
<li><p>CAS@home：帮助中国科学家研究蛋白质结构、纳米技术、肿瘤基因组学以及高能物理。由中科院计算技术研究所、中科院高能物理研究所、清华大学牵头发起。</p>
</li>
<li><p>RNA World：旨在识别、 分析、 结构预测和设计建立生物信息学软件的 RNA 分子。源代码全部公开，成果向公众公开。</p>
</li>
<li><p>MindModeling@home：使用计算模拟认知过程模型，以更好地理解人类的思维。</p>
</li>
<li><p>Rosetta@home：进行蛋白质的三维构造研究，设计出新的蛋白质以抗击艾滋病、疟疾、癌症以及阿尔茨海默氏症（老年痴呆症）。由美国华盛顿大学发起。</p>
</li>
<li><p>GPUGrid.net：利用 NVIDIA 显卡（GPU）来进行全原子的分子动力学模拟。计算生物学的应用给生物医药学带来了新的研究方向。</p>
</li>
<li><p>DENIS@home：通过心脏电生理仿真，研究心脏的电活动。</p>
</li>
<li><h4 id="物联网"><a href="#物联网" class="headerlink" title="物联网"></a>物联网</h4></li>
<li><p>Quake Catcher Network：使用连接到智能手机的传感器来检测地震波。由南加利福尼亚大学发起。</p>
</li>
<li><p>Radioactive@home：使用志愿者计算机上的传感器来建立一个免费并持续更新的辐射强度地图。你需要购买一个传感器来加入这个项目。</p>
</li>
<li><h4 id="数学与密码学"><a href="#数学与密码学" class="headerlink" title="数学与密码学"></a>数学与密码学</h4></li>
<li><p>PrimeGrid：寻找已知最大的质数。</p>
</li>
<li><p>NFS@home：进行大数的分解质因数。</p>
</li>
<li><p>Collatz Conjecture：研究考拉兹猜想(Collatz conjecture)，一个尚未被证明的数学猜想。</p>
</li>
<li><p>Enigma@home：试图破译三条二战期间的纳粹德军加密Enigma电文消息，这些消息于1942年11月25日在北大西洋截获而且一直被认为是不可破解的。该项目采用暴力破解和梯度算法(爬山法)的混合方法试图破译（<a href="http://www.equn.com/m4/m4_project.html">项目说明</a>）。第一条加密信息于2006年2月20日被<a href="http://www.equn.com/m4/m4-project-first-break.html"><strong>成功破译（译文）</strong></a>。第二条加密信息于2006年3月7日被<a href="http://www.equn.com/m4/m4-project-second-break.html"><strong>成功破译（译文）</strong></a>。第三条信息尚未被破译。</p>
</li>
</ul>
<blockquote>
<p>子豪兄批注：</p>
<p>两条加密电文的译文都是关于当时大西洋潜艇战德军U型潜艇的位置、行动航向、速度、遭受攻击，以及战场风向、天气、能见度等战场情报。</p>
<p>“图灵机”概念创始人、人工智能之父阿兰图灵二战期间秘密受命于英国军方，也在从事破译德军Enigma密码的工作并取得成功，使德军在大西洋的“潜艇狼群战术”破产。卷福主演的电影《模仿游戏》讲述的就是这一段历史。关于二战期间英德两国的潜艇战和密码战，以及数学天才阿兰图灵的传奇人生，推荐观看<a href="https://www.iqiyi.com/w_19rqzc75pp.html">北京电视台档案栏目：二战英德密码战</a>、罗辑思维<a href="https://v.youku.com/v_show/id_XMTMzMjMzOTA4NA==.html">《庸众的迫害》</a>。</p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-ce58e5ff1690f3a7.png" alt="几个项目的屏幕保护界面"></p>
<p><img src= "/img/loading.gif" data-lazy-src="http://www.equn.com/images/thumb/5/58/Sah_scr1.jpg/680px-Sah_scr1.jpg" alt="SETI@home屏幕保护界面"></p>
<p><a href="http://www.equn.com/wiki/SETI@home:%E5%B1%8F%E5%B9%95%E4%BF%9D%E6%8A%A4">SETI@home屏幕保护界面解读</a></p>
<p><a href="http://www.equn.com/forum/thread-16446-1-1.html">BOINC各项目屏幕保护动画</a></p>
<h2 id="数字货币与BOINC科学计算的结合——GridCoin"><a href="#数字货币与BOINC科学计算的结合——GridCoin" class="headerlink" title="数字货币与BOINC科学计算的结合——GridCoin"></a>数字货币与BOINC科学计算的结合——GridCoin</h2><div align=center>
<img src= "/img/loading.gif" data-lazy-src='https://upload-images.jianshu.io/upload_images/13714448-eeb156d302b4460b.png%7CimageView2/2/w/1240' />
</div>

<p>​         众所周知，传统的区块链数字货币（比如比特币、以太坊），为了保证区块的安全和交易速度，引入了<strong>挖矿</strong>的“工作量证明共识机制”（<a href="https://mp.weixin.qq.com/s/YB1USLerYHUvOOphAqUuxA">比特币的产生与挖矿</a>），<strong>挖矿本质上是区块链的参与者用计算设备、算力、电力能源换取区块链交易记账权并获取数字货币奖励的过程</strong>。挖矿消耗了巨量的电力能源，造成显卡矿机的军备竞赛和矿池“矿霸”的出现，而用于比特币和以太坊挖矿的算力和能源并不能为实体经济产生价值。于是，基于真实科学计算平台BOINC的虚拟货币GridCoin应运而生。<a href="https://www.gridcoin.us/">GridCoin</a>格雷德币于2013年10月上线，2015年3月改版升级。它依托BOINC（伯克利分布式计算）平台，这个币以去中心化机制，按照科学计算的贡献决定挖矿收益，用算力支持了BOINC平台上涉及生物医学、气候变化、天体物理、密码破译、数学证明、搜寻地外文明等众多领域的有趣的科研项目，解决了比特币挖矿被诟病的浪费能源的问题。创始人Rob Halford三年半以来一直坚持开发，带领一支活跃的开发团队，解决了初期的种种bug，保证了这个币的稳定性和科学计算功能。目前，格雷德币团队在BOINC中的所有十万支团队中近期积分排名第一<a href="http://link.zhihu.com/?target=https://boincstats.com/en/stats/-1/team/list/16/0%231">BOINC全球团队积分排行榜</a>总积分也达到了第六名。</p>
<p>​        Gridcoin格雷德币的矿工如果只是挖矿记账，而不将算力贡献给BOINC科学计算平台，那么每个BLOCK的回报只有5个格币；如果将算力贡献给BOINC科学计算平台，每个BLOCK的回报根据贡献算力的大小将达到6到150个格币。</p>
<p>​        Gridcoin格雷德币充分考虑了避免ASIC（专业矿机）的渗入，保证只有个人电脑的CPU和GPU才能挖矿。格币提供更快的交易确认：平均2.5分钟生成一个新区块，采用SCRYPT的POW（工作量证明）算法。</p>
<p>​        <a href="https://gridcoin.us/assets/img/whitepaper.pdf">数字货币Grid官方白皮书</a></p>
<p>​    <a href="https://zhuanlan.zhihu.com/p/27697266?utm_source=qq&utm_medium=social&utm_oi=571402578022109184">知乎：对格雷德币（Gridcoin，GRC）的了解与初步获取方法</a></p>
<h2 id="扩展阅读与参考文献"><a href="#扩展阅读与参考文献" class="headerlink" title="扩展阅读与参考文献"></a>扩展阅读与参考文献</h2><blockquote>
<p><a href="https://www.bilibili.com/video/av9388526?from=search&seid=6157990192498395439">Bilibili视频：科技小制作 - 树莓派的好去处——SETI@Home - by 科技小制作</a></p>
<p><a href="https://zh.wikipedia.org/wiki/SETI@home">维基百科：SETI@home</a></p>
<p><a href="https://boinc.berkeley.edu/">BOINC官方主页</a></p>
<p><a href="http://www.equn.com/wiki/BOINC">BOINC中国分布式总站</a></p>
<p><a href="http://www.equn.com/wiki/%E6%A8%A1%E6%9D%BF:BOINC_topics">BOINC主流计算项目详细介绍</a></p>
<p><a href="https://setiathome.berkeley.edu/">SETI@home官方主页</a></p>
<p><a href="http://www.equn.com/wiki/SETI@home:%E5%B1%8F%E5%B9%95%E4%BF%9D%E6%8A%A4">SETI@home屏幕保护界面解读</a></p>
<p><a href="http://www.equn.com/forum/thread-16446-1-1.html">BOINC各项目屏幕保护动画</a></p>
<p><a href="https://www.jinse.com/news/bitcoin/85217.html">Gridcoin格雷德币是什么|金色百科</a></p>
<p><a href="https://www.zhihu.com/collection/211032264">知乎：除了比特币，还有哪些区块链的数字货币值得投资？走地鸡的回答</a></p>
<p><a href="https://mp.weixin.qq.com/s/YB1USLerYHUvOOphAqUuxA">比特币的产生与挖矿？</a></p>
<p><a href="https://gridcoin.us/assets/img/whitepaper.pdf">数字货币Grid官方白皮书</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/27697266?utm_source=qq&utm_medium=social&utm_oi=571402578022109184">知乎：对格雷德币（Gridcoin，GRC）的了解与初步获取方法</a></p>
<p><a href="http://ac.qq.com/Comic/comicInfo/id/519544">刘慈欣小说《球状闪电》漫画版，作者：<em>锋绘网</em></a></p>
<p><a href="https://v.youku.com/v_show/id_XMTMzMjMzOTA4NA==.html">罗辑思维第138期《庸众的迫害》</a></p>
<p><a href="https://www.iqiyi.com/w_19rqzc75pp.html">北京电视台档案栏目：二战英德密码战</a></p>
<p><a href="http://tieba.baidu.com/p/3095639402">坐在家中电脑前贡献科研？蛋白质折叠小游戏 Foldit 中文版来啦！</a></p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://projects-static.raspberrypi.org/projects/raspberry-pi-getting-started/13aeb423985e6bacd5d798f5f206a644b7c250a3/en/images/pi-plug-in.gif" alt="树莓派接线"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-9413183a2d79c2a8.png%7CimageView2/2/w/1240" alt="欢迎加入树莓派全球开源社区"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>用树莓派搭建FM广播，播放音乐和实时语音</title>
    <url>/smpfm.html</url>
    <content><![CDATA[<p>-</p>
<p>在树莓派的命令行界面运行以下八条命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir fm</span><br><span class="line">cd fm</span><br><span class="line">sudo git clone https://github.com/markondej/fm_transmitter</span><br><span class="line">sudo apt-get install mpg123</span><br><span class="line">sudo apt-get install gcc g++ make</span><br><span class="line">cd fm_transmitter</span><br><span class="line">sudo make</span><br><span class="line">sudo apt-get install sox</span><br></pre></td></tr></table></figure>



<p>运行以下命令，即可在调频100.6MHz频道广播自带的星球大战主题曲：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sox star_wars.wav -r 22050 -c 1 -b 16 -t wav - | sudo ./fm_transmitter -f 100.6 -</span><br></pre></td></tr></table></figure>

<p>按<code>ctrl</code>+<code>c</code>结束广播。</p>
<blockquote>
<p>也可以把这条命令中的100.6改成其它数字，即可在新频道上广播。</p>
<p>也可以将其它wav格式的文件放到/fm/fm_transmitter文件夹中，替换命令中的star_wars.wav文件</p>
</blockquote>
<p>插上USB声卡，在USB声卡的麦克风孔里插入麦克风，运行以下命令，在即可在调频100.6MHz频道广播实时语音，你也可以把这条命令中的100.6改成其它数字，那样就会在新频道上广播：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">arecord -D plughw:1,0 -c1 -d 0 -r 22050 -f S16_LE | sudo ./fm_transmitter -f 100.6 -</span><br></pre></td></tr></table></figure>

<p>按<code>ctrl</code>+<code>c</code>结束广播。</p>
<p>扩展玩法：</p>
<p>用移动电源给树莓派供电，设置开机免密码自动登录和自动运行广播脚本，将整个系统装在书包里，即可实现走到哪里，广播开到哪里（旅游景点、重要会场讲话、窃听器、位置信标）</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派开机教程</title>
    <url>/smpkj.html</url>
    <content><![CDATA[<h1 id="树莓派开机"><a href="#树莓派开机" class="headerlink" title="树莓派开机"></a>树莓派开机</h1><p>下载镜像文件2018-06-27-raspbian-stretch</p>
<p>格式化SD卡</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-bc7215d37c39e836.png%7CimageView2/2/w/640" alt="格式化已有的SD卡"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-abf5e3f941d3016a.png%7CimageView2/2/w/300" alt="格式化SD卡成功"></p>
<p>烧录系统镜像</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-6d22b8fb9a2fbd6a.png%7CimageView2/2/w/1240" alt="烧录树莓派操作系统镜像"></p>
<p>创建<code>ssh</code>文件和<code>wpa_supplicant.conf</code>空白文件</p>
<p>用文本编辑器打开<code>wpa_supplicant.conf</code>,输入以下配置，可以用多个network{}来配置多个wifi：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">country=GB</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">	ssid=&quot;将我替换成WiFi名字，不删除引号,不能有中文&quot;</span><br><span class="line">	psk=&quot;将我替换成WiFi密码，不删除引号&quot;</span><br><span class="line">	priority=将我替换成数字，数字越大代表优先级越高</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例如这样</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1b37351bcd946978.png%7CimageView2/2/w/1240" alt="配置wifi文件"></p>
<p>将ssh空白文件和wpa_supplicant.conf文件放入boot盘中</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-70819fe7ad131c4c.png%7CimageView2/2/w/1240" alt="将ssh文件和wpa_supplicant.conf文件放入boot盘中"></p>
<p>拔出SD卡，插入树莓派，插好HDMI显示屏线和电源线，通电。</p>
<p>获取树莓派ip地址的方法：</p>
<ol>
<li>如果树莓派连接到了显示屏上，可以直接鼠标指向右上角网络图标，ip地址会自动显示</li>
<li>如果树莓派连接到了显示屏上，可以打开树莓派命令行窗口，输入<code>ifconfig</code></li>
<li>如果没有显示屏，用手机连到与树莓派同一个网络的wifi下，打开dataplicity应用上扫描出树莓派的ip地址</li>
<li>如果没有显示屏，用电脑连到与树莓派同一个网络的wif或者有线网络下，打开局域网ip扫描器，扫描出树莓派ip地址</li>
</ol>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>一劳永逸配置树莓派</title>
    <url>/smpset.html</url>
    <content><![CDATA[<p>换源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>在第一行开头加一个<code>#</code>，把下面的内容拷贝到最后一行之后，如图中的效果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-6e15c90b0aa7acb5.png%7CimageView2/2/w/1240" alt="换国内源"></p>
<p>先按键盘上的<code>ctrl</code>+<code>o</code>，再按回车保存，再按<code>ctrl</code>+<code>x</code>退出nano编辑器回到命令行界面。再输入以下命令更新到清华大学镜像源最新的软件列表。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update </span><br></pre></td></tr></table></figure>



<p>给pip换源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir ~/.pip</span><br><span class="line">ls .pip</span><br><span class="line">sudo nano pip.conf</span><br></pre></td></tr></table></figure>

<p>在打开的文件中输入以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">timeout = 10</span><br><span class="line">index-url =  http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">extra-index-url= http://pypi.douban.com/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host=</span><br><span class="line">    mirrors.aliyun.com</span><br><span class="line">    pypi.douban.com</span><br></pre></td></tr></table></figure>

<p>先按键盘上的<code>ctrl</code>+<code>o</code>，再按回车保存，再按<code>ctrl</code>+<code>x</code>退出nano编辑器回到命令行界面。</p>
<h2 id="树莓派内部设置"><a href="#树莓派内部设置" class="headerlink" title="树莓派内部设置"></a>树莓派内部设置</h2><p>命令行界面输入命令，进入树莓派配置界面。用上下键和左右键切换光标位置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-59742b839ab0c666.png%7CimageView2/2/w/1240" alt="树莓派配置界面"></p>
<h3 id="第一行：Change-User-Password"><a href="#第一行：Change-User-Password" class="headerlink" title="第一行：Change User Password"></a>第一行：Change User Password</h3><p>按照里面的要求修改自己的密码即可。</p>
<h3 id="第四行：Localisation-Options"><a href="#第四行：Localisation-Options" class="headerlink" title="第四行：Localisation Options"></a>第四行：Localisation Options</h3><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-b48ae582572cdfdf.png%7CimageView2/2/w/1240" alt="Localisation Options"></p>
<h4 id="第一行：Change-Locale-选择所在国家"><a href="#第一行：Change-Locale-选择所在国家" class="headerlink" title="第一行：Change Locale 选择所在国家"></a>第一行：Change Locale 选择所在国家</h4><p>这是一串很长的列表，到这个列表的最下面，让光标指在zh_CN.UTF-8 UTF-8前面，先按空格，再按回车，回到之前的界面再按回车。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-b1dbcf02b13931d0.png%7CimageView2/2/w/1240" alt="此时再按回车"></p>
<p>重新选择第四行Localisation Options</p>
<h4 id="第二行：Change-Timezone-选择所在时区"><a href="#第二行：Change-Timezone-选择所在时区" class="headerlink" title="第二行：Change Timezone 选择所在时区"></a>第二行：Change Timezone 选择所在时区</h4><p>选择Asia，再选择Shanghai</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-04ab876253408fc5.png%7CimageView2/2/w/1240" alt="选择Asia"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-53862520982039df.png%7CimageView2/2/w/1240" alt="选择Shanghai"></p>
<h4 id="第四行：Change-Wi-fi-Country-选择wifi国家"><a href="#第四行：Change-Wi-fi-Country-选择wifi国家" class="headerlink" title="第四行：Change Wi-fi Country 选择wifi国家"></a>第四行：Change Wi-fi Country 选择wifi国家</h4><p>选择CN China，回车</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-3f99f1c817ce7396.png%7CimageView2/2/w/1240" alt="选择Wifi国家"></p>
<h3 id="第五行：Interfacing-Options"><a href="#第五行：Interfacing-Options" class="headerlink" title="第五行：Interfacing Options"></a>第五行：Interfacing Options</h3><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e4c334e40682f5c2.png%7CimageView2/2/w/1240" alt="Interfacing Options"></p>
<p>打开Camera、SSH、VNC、Serial、Remote GPIO</p>
<h3 id="第七行：Advanced-Options"><a href="#第七行：Advanced-Options" class="headerlink" title="第七行：Advanced Options"></a>第七行：Advanced Options</h3><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1d3bb4659426dce8.png%7CimageView2/2/w/1240" alt="Adcanved Options"></p>
<ul>
<li><p>选择Expand Filesystem，将根目录扩展到这个SD卡，充分利用SD卡的存储空间</p>
</li>
<li><p>选择Overscan，在整个屏幕上显示</p>
</li>
<li><p>选择Audio，选择Force 3.5mm(‘headphone’ jack)，树莓派的声音会从耳机孔输出</p>
</li>
<li><p>选择Resolution，选择默认设置，自动根据显示屏调整分辨率</p>
</li>
<li><p>选择Pixel Doubling，增加桌面显示画质</p>
<p>选择Finish，会跳出对话框问是否重新启动，直接回车确定。</p>
</li>
</ul>
<p>安装中文字体<br>sudo apt-get install fonts-wqy-zenhei</p>
<p>安装中文输入法fcitx及Google拼音输入法（大约需要五分钟）<br>sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin<br>安装完毕，重启即可。ctrl+空格切换为中文输入法</p>
<p>在跳出的对话框中输入<code>y</code>和回车<code>↩</code>，确定下载安装，需要90MB存储空间。</p>
<p>VNC Viewer只能在你的电脑或手机与树莓派在同一个局域网下才能远程桌面，</p>
<p>如果你带着电脑和手机在全世界任何地方，只要连着网，打开teamviewer，就可以</p>
<p>安装teamviewer，只需要五行命令。在运行第二条命令的时候会显示很多依赖包没有安装，不要慌，第三条命令就是用来干这个的。</p>
<p>如果命令执行过程中跳出对话框，则输入<code>y</code>和回车<code>↩</code>，确定下载安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://download.teamviewer.com/download/linux/version_11x/teamviewer-host_armhf.deb</span><br><span class="line"></span><br><span class="line">sudo dpkg -i teamviewer-host_armhf.deb</span><br><span class="line"></span><br><span class="line">sudo apt-get -f install</span><br><span class="line"></span><br><span class="line">sudo apt-get install gdebi</span><br><span class="line"></span><br><span class="line">sudo gdebi teamviewer-host_armhf.deb</span><br></pre></td></tr></table></figure>





<p>在命令行中输入</p>
<p><code>teamviewer info</code>可以查看teamviewer当前版本</p>
<p>在跳出的对话框选择Accept License Agreement</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-2bd262010506fd1d.png%7CimageView2/2/w/1240" alt="teamviewer对话框"></p>
<p>在树莓派桌面，右上角可以看到teamviewer的图标了，点击进入。再点击Grant easy access，登录你的teamviewer账户，设置连接密码。通过那一串数字（如图中的1112747434），就可以让全世界任意一台上网的电脑或手机远程桌面操控你的树莓派了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-2830f9965d4f0ce1.png%7CimageView2/2/w/1240" alt="登录teamviewer账户"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-d5d8b43ba0bf11b9.png%7CimageView2/2/w/1240" alt="点击小齿轮图标，设置"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-3dbed8171117ba60.png%7CimageView2/2/w/1240" alt="设置连接密码"></p>
<p>sudo apt-get upgrade </p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualHardwares硬件虚拟工具收费版本</title>
    <url>/virtualhardwareshack.html</url>
    <content><![CDATA[<p><strong>VirtualHardwares硬件虚拟工具收费版本</strong>为能够任意更改你的硬件显示参数的软件，并非真实的改变哟，有时候试用部分程序的时候，会用到它来改本机ID识别码，进行多次、长时间的免费</p>
<p>使用，功能上来说，还是挺强大实用的东西呢，推荐给有需要的用户们！</p>
<h3 id="virtualhardwares破解版简介"><a href="#virtualhardwares破解版简介" class="headerlink" title="virtualhardwares破解版简介"></a>virtualhardwares破解版简介</h3><p>VirtualHardwares是一款windows下可视化可定制虚拟硬件信息的工具。VirtualHardwares并不是真正的修改，而是虚拟修改，您重启计算机后将恢复到原始计算机状态，不会对您的硬件和软件造成任何影响。VirtualHardwares内置了查询硬件信息和随机生成硬件信息，用户不需要任何专业知识，甚至可以完全不懂硬件信息，也能快速虚拟一份新硬件信息。此外他能支持全局虚拟一份硬件信息，也支持不同进程虚拟不同硬件信息，他是完全可定制化的，是一款所见即所得的软件。让普通人虚拟出专业水准的硬件信息，以前是一个不可思议的想法，而VirtualHardwares的出现，让这成为现实。经过数年的发展，目前国内已经有数万用户成功利用VirtualHardwares自行虚拟硬件信息，不再受制于软件硬件公司，不少用户省了一笔不菲费用；同时也发展了一大批个人爱好者，这些爱好者很多都是个人用户，硬件DIY爱好者，熟悉硬件和硬件DIY，以前苦于没有合适的虚拟工具，无法根据自己的需要自行虚拟硬件，VirtualHardwares的出现，让他们如虎添翼，纷纷虚拟出适合自己需求的硬件信息。</p>
<h3 id="GITEE下载地址，"><a href="#GITEE下载地址，" class="headerlink" title="GITEE下载地址，"></a><a href="https://gitee.com/lybbs/img/raw/master/hardware.exe" target="_blank">GITEE下载地址</a>，</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201220113248.png"></p>
<h3 id="本软件对电脑软件硬件有损坏吗？"><a href="#本软件对电脑软件硬件有损坏吗？" class="headerlink" title="本软件对电脑软件硬件有损坏吗？"></a>本软件对电脑软件硬件有损坏吗？</h3><p>**硬件:**本软件是虚拟修改，并非正真修改，重启计算机将恢复您的原始计算机状态。因此本软件不会对您的硬件有任何损坏。 </p>
<p>**软件:**本软件是虚拟设置操作系统和软件信息，不会真正的修改操作系统和软件的设置。 </p>
<p>**注意:**某些软件会根据硬件信息来生成序列号和注册码，您的虚拟操作可能会使您的机器码改变，导致您正常使用的序列号或者注册码无法正常使用。(使用本软件表明您已经同意此操作，在使用过程中出现任何未知预料的错误将于本人无关)。</p>
<h3 id="VirtualHardwares免费主要特性"><a href="#VirtualHardwares免费主要特性" class="headerlink" title="VirtualHardwares免费主要特性"></a>VirtualHardwares免费主要特性</h3><p>功能特性概括起来就是兼容性强、多重虚拟、可定制化、参数丰富。下面我们逐个来看下介绍。</p>
<p><strong>1、兼容性强</strong></p>
<p>支持所有windows32/64位系统(xp-win10)</p>
<p>支持<a href="http://www.itmop.com/key/vmware/">vmware</a> Workstation Pro<a href="http://www.itmop.com/key/xuniji/">虚拟机</a></p>
<p>全面兼容32/64位进程</p>
<p>重启恢复原始硬件信息状态</p>
<p>不破坏任何软件和硬件</p>
<p><strong>2、多重虚拟</strong></p>
<p>支持驱动级系统全局虚拟</p>
<p>支持对所有进程虚拟</p>
<p>支持对精准进程ID虚拟</p>
<p>支持启动新的进程虚拟</p>
<p>支持以上4种模式禁止查询硬件信息</p>
<p><strong>3、可定制化</strong></p>
<p>支持自定义硬件信息进行虚拟一份新硬件信息</p>
<p>可根据虚拟模式来虚拟不同硬件信息</p>
<p>完全可定制化</p>
<p><strong>4、参数丰富</strong></p>
<p>系统信息虚拟：计算机名,产品ID,系统安时间</p>
<p>网卡信息虚拟：当前、物理、操作系统的MAC地址</p>
<p>硬盘分区信息虚拟：硬盘序列号、硬盘型号、硬盘大小、硬盘固件版本、硬盘分区序列号</p>
<h3 id="运行模式介绍"><a href="#运行模式介绍" class="headerlink" title="运行模式介绍"></a>运行模式介绍</h3><p>该软件包括hardware.exe、VMwarehardware.exe、网卡MAC地址修改工具.exe 和 GameHardware.exe四个可执行文件，包换多种模式设置，需要注意的是不论什么模式均需要加载驱动，所以可能被<a href="http://www.itmop.com/key/anquanruanjian/">安全软件</a>拦截，这个工具不会修改任何硬件，也不会修改操作系统任何设置，重启计算机将恢复到系统的初始化状态，所以大家可以大胆设置放行。</p>
<p><strong>驱动全局模式</strong></p>
<p>驱动全局模式是驱动级虚拟一份硬件信息，当操作系统或者硬件信息查询软件进行硬件信息查询的时候都能进入虚拟硬件模式。</p>
<p>双击桌面的hardware.exe 图标启动本软件，选择”驱动全局模式”，勾选需要虚拟的硬件信息，点击确定按钮。</p>
<p><strong>驱动进程模式</strong></p>
<p>驱动进程模式是驱动级虚拟一份硬件信息，当硬件信息查询软件进行硬件信息查询的时候都能进入虚拟硬件模式（只对当前选择操作的进程有效其他进程和系统不受影响）。</p>
<p><strong>全部进程模式</strong></p>
<p>全部进程模式是对当前操作系统正在运行的所有进程进程虚拟一份完全一样的硬件信息，这个工具只是内部自动过滤了系统进程，不会对系统造成任何影响，并且此操作只会对系统正在运行的常用软件进行虚拟硬件。</p>
<p><strong>单一进程模式</strong></p>
<p>单一进程模式是对当前某个进程进程虚拟一份硬件信息的模式，比如只需对获取硬件信息的软件执行虚拟一份硬件信息，这个功能就非常合适了。不仅可以启动一个新的进程开虚拟一份硬件信息还可以在进程列表中选择一个已经存在的进程进行虚拟一份硬件信息。</p>
<p><strong>禁止查询模式</strong></p>
<h3 id="virtualhardwares怎么用"><a href="#virtualhardwares怎么用" class="headerlink" title="virtualhardwares怎么用"></a>virtualhardwares怎么用</h3><p><strong>常见操作说明</strong></p>
<p><strong>1、虚拟硬件信息使用说明</strong></p>
<p><strong>1.1 修改硬盘序列号</strong></p>
<p>硬盘有硬盘序列号,硬盘固件版本,硬盘型号ID,硬盘大小。这些信息都可以虚拟一份。选择需要操作的硬盘，勾选要操作的硬盘信息，纯手工输入您需要虚拟的硬盘硬件信息，点击随机按钮，随机生成一份，点击确定。</p>
<p><strong>1.2 修改分区序列号</strong></p>
<p>分区序列号是硬盘分区后(C盘 D盘)每个盘符都有的一个序列号，您可以对分区的序列号进行虚拟，重启计算机将恢复您的分区序列号初始化状态。选择需要操作的分区，纯手工输入您需要虚拟的分区序列号，点击随机按钮，随机生成一份，点击确定。</p>
<p><strong>1.3 修改网卡MAC地址</strong></p>
<p>网卡MAC码是由全球惟一的一个固定组织来分配的，未经认证和授权的厂家无权生产网卡。每块网卡都有一个固定的卡号，并且任何正规厂家生产的网卡上都直接标明了卡号，一般为一组12位的16进制数。其中前6位代表网卡的生产厂商，您可以虚拟物理网卡MAC、当前网卡MAC和操作系统的网卡MAC地址。</p>
<p>选择要操作的网卡，勾选操作选项，纯手工输入网卡MAC地址，点击随机按钮来随机生成一份，点击确定按钮。</p>
<p>为了使用方便，本工具包单独制作有一个网卡MAC地址修改工具.exe的可执行文件。 </p>
<p><strong>2、VM虚拟机修改使用说明</strong></p>
<p>VMwarehardware是一款在VMware Workstation Pro虚拟机里面运行的软件，用来修改VMware Workstation Pro虚拟机里面的xp-win10系统的硬件信息，3z学堂这里要特别提醒下，请勿用这个虚拟机软件修改物理机器！</p>
<p>请勿用这个虚拟机软件修改物理机器！请勿用这个虚拟机软件修改物理机器！重要的事情说三遍！</p>
<p>VMware Workstation（中文名“威睿工作站”）是一款功能强大的桌面虚拟计算机软件，提供用户可在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案。VMware Workstation可在一部实体机器上模拟完整的网络环境，以及可便于携带的虚拟机器，其更好的灵活性与先进的技术胜过了市面上其他的虚拟计算机软件。对于企业的 IT开发人员和系统管理员而言， VMware在虚拟网路，实时快照，拖曳共享文件夹，支持 PXE 等方面的特点使它成为必不可少的工具。</p>
<p>使用方法：在VMware Workstation Pro虚拟机里面运行VMwarehardware.exe，勾选要修改的信息，可点击随机来随机生成硬件信息，点击确定修改按钮来实现。</p>
<p><strong>3、游戏多开虚拟硬件使用说明</strong></p>
<p>GameHardware是一款针对游戏多开多进程不同硬件信息的工具，支持系统MAC地址 硬盘信息 分区信息 自动父子进程硬件信息同步。</p>
<p>使用方法：启动GameHardware.exe，登陆账号，功能设置，添加程序，启动游戏。</p>
<p><strong>3.1 父子进程同步模式</strong></p>
<p>比如A.exe启动了B.exe，然后B.exe又启动了C.exe，那么ABC进程硬件信息同步，反之只有A有效果</p>
<p><strong>3.2 禁用WMI模式</strong></p>
<p>禁用系统WMI接口查询硬件信息，推荐勾选，如果进程环境异常请不要勾选增强硬盘模式(插入U盘等移动设备系统识别不了请关闭此项)。注册表中保存了一份硬盘信息，某些程序会读取这里，推荐勾选，如果进程环境异常请不要勾选</p>
<p><strong>3.3 自动加入模式</strong></p>
<p>启动新进程自动加入虚拟列表中</p>
<p><strong>3.4 设置开机启动流程</strong></p>
<p>1.右键创建到桌面快捷方式 2.拖动桌面快捷方式到开始程序启动</p>
<h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p><strong>2018/03/07</strong></p>
<p>修复分区序列号虚拟设置后去掉勾选无法还原的BUG</p>
<p><strong>2018/03/02</strong></p>
<p>紧急去掉上个版本虚拟硬盘信息导致蓝屏的问题</p>
<p><strong>2018/03/01</strong></p>
<p>1.禁止查询模式下分区序列号置零处理,修复分区序列号修改后关闭EXE重新打开读取修改状态错误的bug</p>
<p>2.增强硬盘信息虚拟能力，某些情况下虚拟硬盘信息关闭EXE打开还是以前的信息</p>
<p>3.磁盘信息只对固定磁盘类型虚拟，过滤U盘 CD-ROM 网络磁盘等等</p>
<p>4.勾选硬盘信息和禁止查询模式下，插入U盘识别不了的，请关闭这些功能重新插拔U盘已正常识别使用。</p>
<p><strong>2018/02/23</strong></p>
<p>驱动全局模式的禁止查询模式增加新的功能，大大提升禁止查询硬件信息能力</p>
<p><strong>2018/01/31</strong></p>
<p>hardware正式发布</p>
<h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><p><strong>1、虚拟硬件信息后如何恢复？</strong></p>
<p>当虚拟硬件信息后想恢复原始状态时只需要去掉勾选的硬件信息，点击确定无需重启计算机即可完成恢复。也可以使用快捷恢复按钮”一键恢复”</p>
<p><strong>2、VMwarehardware使用场景</strong></p>
<p>VMwarehardware是一款在VMware Workstation Pro虚拟机里面运行的软件，用来修改VMware Workstation Pro虚拟机里面的xp-win10系统的硬件信息，请勿用于修改物理机器，否则后果自负！</p>
<p><strong>3、操作完毕后软件可以关闭吗？</strong></p>
<p>操作完成后您可以关闭本软件，它仍然在继续工作</p>
<p>**4、为什么网卡MAC地址修改失败？ **</p>
<p>答：这种情况一般是网卡不支持修改MAC地址(比如USB无线网卡)</p>
<p>**5、为什么重启网卡失败? **</p>
<p>答：这种情况一般是网卡被其他程序独占打开了，导致程序重启网卡失败，可以尝试手动禁用网卡在启动或重启计算机</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>破解软件</tag>
      </tags>
  </entry>
  <entry>
    <title>网站推荐第一期</title>
    <url>/websitefx.html</url>
    <content><![CDATA[<h5 id="网站推荐第一期"><a href="#网站推荐第一期" class="headerlink" title="网站推荐第一期"></a>网站推荐第一期</h5><p>不知道有没有人和我一样是书签强迫站，就是那种非常喜欢把书签塞的满满的全是干货。今天我来给大家推荐几个网站。</p>
<ul>
<li>资源类 </li>
</ul>
<p><a href="https://www.fosshub.com/">Fosshub</a> 开源软件合集</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/29/8B8D.png" alt="image-20200829141755290"></p>
<p>fosshub是一个开源软件合计网站，里面包含了各种分类</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/29/8B8H.png" alt="png"></p>
<p>如果你需要寻找开源软件你可以前往这个网站。</p>
<ul>
<li>杂项类</li>
</ul>
<p><a href="https://www.cupfox.com/">Cupfox</a> 茶杯狐</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/29/8B8Y.png" alt="cif"></p>
<p>因为某些原因，我就不多说啥了，这玩意你看图片就知道是干啥用的了。</p>
<p>那么，第一期就先这样了。我们下一期再见~</p>
]]></content>
      <categories>
        <category>推荐</category>
      </categories>
      <tags>
        <tag>网站推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>Wordpress后台管理员无法访问</title>
    <url>/wpnoadmin.html</url>
    <content><![CDATA[<h5 id="Wordpress后台管理员无法访问"><a href="#Wordpress后台管理员无法访问" class="headerlink" title="Wordpress后台管理员无法访问"></a>Wordpress后台管理员无法访问</h5><p>这个问题，非常的致命哈哈哈哈。</p>
<p>原因很简单。</p>
<ul>
<li>你是和我上一篇博文一样配置完https重定向的</li>
</ul>
<p>为什么会出现这种情况呢。</p>
<p>他们把这串代码弄到了最底下。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line">define(<span class="string">&#x27;FORCE_SSL_LOGIN&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">define(<span class="string">&#x27;FORCE_SSL_ADMIN&#x27;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/28/8AS2.png" alt="wt"></p>
<p>然后，你只需把他移动到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! defined( <span class="string">&#x27;ABSPATH&#x27;</span> ) ) &#123;</span><br><span class="line">	define( <span class="string">&#x27;ABSPATH&#x27;</span>, dirname( <span class="keyword">__FILE__</span> ) . <span class="string">&#x27;/&#x27;</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这串代码以上就行了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/28/8AS1.png" alt="jj"></p>
]]></content>
      <categories>
        <category>WordPress</category>
      </categories>
      <tags>
        <tag>WordPress错误</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress配置完SSL证书后台重定向过多</title>
    <url>/wpsslerror.html</url>
    <content><![CDATA[<h5 id="Wordpress配置完SSL证书后台重定向过多"><a href="#Wordpress配置完SSL证书后台重定向过多" class="headerlink" title="Wordpress配置完SSL证书后台重定向过多"></a>Wordpress配置完SSL证书后台重定向过多</h5><p>前言:在配置完cloudflash的DNS解析后，我发现我的管理员后台一直显示重定向过多。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/28/8ARN.png" alt="cdx"></p>
<p>后来发现是我的HTTPS配置问题。</p>
<h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>首先打开你的网站根目录。找到一个名为wp-config.php的文件。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/28/8ARR.png" alt="wj"></p>
<p>打开它，然后拉到最下面。添加以下代码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line">define(<span class="string">&#x27;FORCE_SSL_LOGIN&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">define(<span class="string">&#x27;FORCE_SSL_ADMIN&#x27;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<p>然后回到后台地址</p>
<p><a href="https://exp.com/wp-admin/">https://exp.com/wp-admin/</a></p>
<p>按住</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl + F5</span><br></pre></td></tr></table></figure>

<p>刷新即可。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.niupic.com/images/2020/08/28/8ARV.png" alt="cg"></p>
]]></content>
      <categories>
        <category>WordPress</category>
      </categories>
      <tags>
        <tag>WordPress错误</tag>
      </tags>
  </entry>
  <entry>
    <title>40个超有趣的Linux命令行彩蛋和游戏</title>
    <url>/40linuxcd.html</url>
    <content><![CDATA[<blockquote>
<blockquote>
<p>40个有趣的Linux命令行彩蛋和游戏，让你假装成日理万机的黑客高手。附一键安装脚本，在树莓派和ubuntu云主机上亲测成功，有些还可以在Windows的DOS命令行中运行。</p>
</blockquote>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-777806bcc005bb31.png%7CimageView2/2/w/1240" alt="toilet命令彩色字"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-660f85e3aeb6a9bf.gif" alt="高大上黑客仪表盘"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1921727182271686.gif" alt="hollywood命令"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-953feec6877d32ca.gif" alt="字符串水族馆"></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li>  <a href="#%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%9C%AC%E6%96%87%E5%85%A8%E9%83%A8%E5%91%BD%E4%BB%A4%E6%89%80%E9%9C%80%E7%8E%AF%E5%A2%83">一键下载安装配置本文全部命令所需环境</a></li>
<li>  <a href="#%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD%E5%AD%97%E8%8A%82%E6%95%B0%E6%8D%AE%E6%B5%81%E5%81%87%E8%A3%85%E8%87%AA%E5%B7%B1%E6%98%AF%E9%BB%91%E5%AE%A2%E9%AB%98%E6%89%8B%E6%97%A0%E5%AD%94%E4%B8%8D%E5%85%A5">1、黑客帝国字节数据流——假装自己是黑客高手，无孔不入</a></li>
<li>  <a href="#%E9%AB%98%E5%A4%A7%E4%B8%8A%E4%BB%AA%E8%A1%A8%E7%9B%98blessed-contrib%E5%81%87%E8%A3%85%E8%87%AA%E5%B7%B1%E6%8C%87%E7%82%B9%E6%B1%9F%E5%B1%B1%E7%BA%B5%E6%A8%AA%E6%8D%AD%E9%98%96">2、高大上仪表盘blessed-contrib——假装自己指点江山，纵横捭阖</a></li>
<li>  <a href="#%E9%AB%98%E5%A4%A7%E4%B8%8A%E4%BB%AA%E8%A1%A8%E7%9B%98hollywood%E5%81%87%E8%A3%85%E8%87%AA%E5%B7%B1%E6%97%A5%E7%90%86%E4%B8%87%E6%9C%BA%E5%AE%B5%E8%A1%A3%E6%97%B0%E9%A3%9F">3、高大上仪表盘hollywood——假装自己日理万机，宵衣旰食</a></li>
<li>  <a href="#%E8%BF%BD%E9%80%90%E9%BC%A0%E6%A0%87%E7%9A%84%E5%B0%8F%E7%8C%ABoneko">4、追逐鼠标的小猫oneko</a></li>
<li>  <a href="#ascii%E8%89%BA%E6%9C%AF%E6%A1%86box%E5%91%BD%E4%BB%A4">5、ASCII艺术框：box命令</a></li>
<li>  <a href="#%E7%87%83%E8%B5%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E7%81%ABaafire">6、燃起字符串大火aafire</a></li>
<li>  <a href="#%E7%81%AB%E8%BD%A6strem-locomotive">7、火车：Strem Locomotive</a></li>
<li>  <a href="#%E7%9B%AF%E7%9D%80%E9%BC%A0%E6%A0%87%E7%9C%8B%E7%9A%84%E5%A4%A7%E7%9C%BC%E7%9D%9B">8、盯着鼠标看的大眼睛</a></li>
<li>  <a href="#%E8%89%BA%E6%9C%AF%E5%AD%97%E7%94%9F%E6%88%90%E5%99%A8toilet">9、艺术字生成器toilet</a></li>
<li>  <a href="#%E8%89%BA%E6%9C%AF%E5%AD%97%E7%94%9F%E6%88%90%E5%99%A8figlet">10、艺术字生成器figlet</a></li>
<li>  <a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%86%E9%A2%91%E5%9B%9E%E5%BD%92%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E4%B8%8A%E5%8F%A4%E6%97%B6%E4%BB%A3">11、字符串视频——回归计算机的上古时代</a></li>
<li>  <a href="#%E8%BE%93%E5%87%BA%E5%90%8D%E4%BA%BA%E5%90%8D%E8%A8%80%E5%8F%A4%E8%AF%97%E8%AF%8D">12、输出名人名言、古诗词</a></li>
<li>  <a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B0%B4%E6%97%8F%E9%A6%86asciiquarium">13、字符串水族馆：ASCIIquarium</a></li>
<li>  <a href="#%E4%BC%9A%E8%AF%B4%E8%AF%9D%E7%9A%84%E7%89%9B">14、会说话的牛</a></li>
<li>  <a href="#%E4%BC%9A%E8%AF%B4%E8%AF%9D%E7%9A%84%E7%89%9B2">15、会说话的牛2</a></li>
<li>  <a href="#%E6%97%A5%E5%8E%86">16、日历</a></li>
<li>  <a href="#yes%E5%91%BD%E4%BB%A4">17、yes命令</a></li>
<li>  <a href="#%E5%88%86%E8%A7%A3%E5%9B%A0%E6%95%B0">18、分解因数</a></li>
<li>  <a href="#screenfetch%E6%98%BE%E7%A4%BA%E7%B3%BB%E7%BB%9F%E4%B8%BB%E9%A2%98%E4%BF%A1%E6%81%AF">19、screenfetch:显示系统、主题信息</a></li>
<li>  <a href="#linux%E5%90%84%E5%8F%91%E8%A1%8C%E7%89%88logo%E5%9B%BE%E7%89%87%E5%8F%8A%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF">20、linux各发行版logo图片及系统信息</a></li>
<li>  <a href="#%E5%9B%BE%E7%89%87%E8%BD%ACascii%E7%94%BB%E9%A3%8E">21、图片转ASCII画风</a></li>
<li>  <a href="#%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E5%91%BD%E4%BB%A4">22、反转字符命令</a></li>
<li>  <a href="#%E6%89%93%E5%AD%97%E6%9C%BApv%E5%91%BD%E4%BB%A4%E5%AD%97%E5%B9%95%E4%B8%80%E4%B8%AA%E4%B8%AA%E5%8C%80%E9%80%9F%E6%98%BE%E7%A4%BA%E5%87%BA%E6%9D%A5">23、打字机pv命令：字幕一个个匀速显示出来</a></li>
<li>  <a href="#%E4%BB%8E%E5%88%A0%E5%BA%93%E5%88%B0%E8%B7%91%E8%B7%AF-sudo-rm--rf">24、从删库到跑路 sudo rm -rf /*</a></li>
<li>  <a href="#%E6%92%AD%E6%94%BE%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98">25、播放星球大战</a></li>
<li>  <a href="#%E8%AE%A9%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%B4%E8%AF%9D">26、让命令行说话</a></li>
<li>  <a href="#%E9%9A%8F%E6%9C%BA%E4%BA%A7%E7%94%9F%E4%BA%BA%E5%90%8D%E4%B8%8E%E5%9C%B0%E5%9D%80">27、随机产生人名与地址</a></li>
<li>  <a href="#%E8%B6%85%E7%BA%A7%E7%89%9B%E5%8A%9B%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E7%9A%84%E5%BD%A9%E8%9B%8B">28、超级牛力——包管理器的彩蛋</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fbastet%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97">29、命令行游戏bastet：俄罗斯方块</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fninvaders%E5%A4%AA%E7%A9%BA%E5%85%A5%E4%BE%B5%E8%80%85">30、命令行游戏ninvaders：太空入侵者</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fpacman4console%E5%90%83%E8%B1%86%E4%BA%BA">31、命令行游戏pacman4console：吃豆人</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fnsnake%E8%B4%AA%E5%90%83%E8%9B%87">32、命令行游戏nSnake：贪吃蛇</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fgreed%E8%B5%A2%E8%80%85%E9%80%9A%E5%90%83">33、命令行游戏Greed：赢者通吃</a></li>
<li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fair-traffic-controller%E7%A9%BA%E4%B8%AD%E5%A1%94%E5%8F%B0%E6%8E%A7%E5%88%B6">34、命令行游戏Air Traffic<br>  Controller：空中塔台控制</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fbackgammon%E5%8F%8C%E9%99%86%E6%A3%8B">35、命令行游戏backgammon：双陆棋</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8Fmoonbuggy%E6%9C%88%E7%90%83%E6%88%98%E8%BD%A6">36、命令行游戏moonbuggy：月球战车</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8F2048">37、命令行游戏2048</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B9%9F%E8%83%BD%E8%81%94%E6%9C%BA%E7%8E%A9%E7%BD%91%E6%B8%B8tron">38、命令行也能联机玩网游：Tron</a></li>
<li>  <a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%B8%E6%88%8F%E5%B7%A8%E6%B4%9E%E5%86%92%E9%99%A9">39、命令行游戏：巨洞冒险</a></li>
<li>  <a href="#%E6%89%93%E5%8D%B0%E5%9C%86%E5%91%A8%E7%8E%87%E5%90%8E%E5%B0%8F%E6%95%B0%E7%82%B9%E8%8B%A5%E5%B9%B2%E4%BD%8D">40、打印圆周率后小数点若干位</a></li>
<li>  <a href="#%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB%E4%B8%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">扩展阅读与参考文献</a></li>
</ul>
<h1 id="一键下载安装配置本文全部命令所需环境"><a href="#一键下载安装配置本文全部命令所需环境" class="headerlink" title="一键下载安装配置本文全部命令所需环境"></a>一键下载安装配置本文全部命令所需环境</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;TommyZihao&#x2F;linux-funny-command.git</span><br><span class="line">cd linux-funny-command</span><br><span class="line">sudo chmod 777 1.sh</span><br><span class="line">.&#x2F;1.sh</span><br></pre></td></tr></table></figure>

<p>运行这个脚本文件大概需要十几分钟时间，如果你不想安装全部命令，可以按后文的介绍手动安装相应的命令。</p>
<p>如果你运行完了这个脚本，只需输入每条命令代码框中最后的运行命令就可以执行命令啦。</p>
<h1 id="1、黑客帝国字节数据流——假装自己是黑客高手，无孔不入"><a href="#1、黑客帝国字节数据流——假装自己是黑客高手，无孔不入" class="headerlink" title="1、黑客帝国字节数据流——假装自己是黑客高手，无孔不入"></a>1、黑客帝国字节数据流——假装自己是黑客高手，无孔不入</h1><p>在命令行中输入以下命令安装并运行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cmatrix</span><br><span class="line">cmatrix</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-92f96d6586936f3e.gif" alt="cmatrix字节流效果"></p>
<p>还可输入参数控制颜色。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmatric -C red</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-406fef5a59b0446e.gif" alt="cmatrix红色字节流"></p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<blockquote>
<p>在《黑客帝国》电影里的字节流其实是该片美术指导Simon<br>Whitley的日本妻子菜谱上的片假名。</p>
</blockquote>
<h1 id="2、高大上仪表盘blessed-contrib——假装自己指点江山，纵横捭阖"><a href="#2、高大上仪表盘blessed-contrib——假装自己指点江山，纵横捭阖" class="headerlink" title="2、高大上仪表盘blessed-contrib——假装自己指点江山，纵横捭阖"></a>2、高大上仪表盘blessed-contrib——假装自己指点江山，纵横捭阖</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install npm</span><br><span class="line">sudo apt install nodejs-legacy</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;yaronn&#x2F;blessed-contrib.git</span><br><span class="line">cd blessed-contrib</span><br><span class="line">npm install</span><br><span class="line">node .&#x2F;examples&#x2F;dashboard.js</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-660f85e3aeb6a9bf.gif" alt="高大上黑客仪表盘"></p>
<blockquote>
<p><a href="https://github.com/yaronn/blessed-contrib">blessed-contrib项目主页</a></p>
<p>建议在云服务器或虚拟机上运行这个命令，在树莓派上运行可能会出问题。</p>
</blockquote>
<h1 id="3、高大上仪表盘hollywood——假装自己日理万机，宵衣旰食"><a href="#3、高大上仪表盘hollywood——假装自己日理万机，宵衣旰食" class="headerlink" title="3、高大上仪表盘hollywood——假装自己日理万机，宵衣旰食"></a>3、高大上仪表盘hollywood——假装自己日理万机，宵衣旰食</h1><p>Dustin Kirkland<br>利用一个长途飞行的时间，编写了这个炫酷、有趣但也没什么实际作用的软件。</p>
<p>Ubuntu操作系统可以直接通过以下命令安装并运行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install hollywood</span><br><span class="line">hollywood</span><br></pre></td></tr></table></figure>

<p>在其它Linux发行版中，可以通过以下命令安装并运行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-add-repository ppa:hollywood&#x2F;ppa</span><br><span class="line">sudo apt-get install hollywood</span><br><span class="line">sudo apt-get install byobu</span><br><span class="line">hollywood</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-7f75cabe6d2f5560.gif" alt="hollywood命令"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1921727182271686.gif" alt="hollywood命令"></p>
<blockquote>
<p><a href="https://github.com/dustinkirkland/hollywood">hollywood项目主页</a></p>
</blockquote>
<h1 id="4、追逐鼠标的小猫oneko"><a href="#4、追逐鼠标的小猫oneko" class="headerlink" title="4、追逐鼠标的小猫oneko"></a>4、追逐鼠标的小猫oneko</h1><p>在桌面的命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install oneko</span><br><span class="line">oneko</span><br></pre></td></tr></table></figure>

<p>然后输入<code>oneko</code>，即可看到效果。</p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<blockquote>
<p>注意，本命令只能在桌面所在的命令行界面输入，在远程ssh界面会显示“oneko:Can’t<br>open display”</p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-9c07f52aa2939f25.gif" alt="oneko命令：小猫追鼠标"></p>
<h1 id="5、ASCII艺术框：box命令"><a href="#5、ASCII艺术框：box命令" class="headerlink" title="5、ASCII艺术框：box命令"></a>5、ASCII艺术框：box命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install boxes</span><br><span class="line">echo &quot;Tongji Univerisity&quot; | boxes</span><br><span class="line">echo &quot;Tongji Univerisity&quot; | boxes -d dog</span><br><span class="line">fortune | boxes -d cat | lolcat</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e533a44e5f2bbe26.png%7CimageView2/2/w/1240" alt="box命令"></p>
<h1 id="6、燃起字符串大火aafire"><a href="#6、燃起字符串大火aafire" class="headerlink" title="6、燃起字符串大火aafire"></a>6、燃起字符串大火aafire</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libaa-bin  </span><br><span class="line">aafire</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>aafire</code>，即可看到效果</p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-cb38f19a1221c7a1.gif" alt="aafire字符串大火"></p>
<h1 id="7、火车：Strem-Locomotive"><a href="#7、火车：Strem-Locomotive" class="headerlink" title="7、火车：Strem Locomotive"></a>7、火车：Strem Locomotive</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install sl</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>sl</code>，即可看到效果。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-7afaccc26583811d.gif" alt="sl命令：字符串火车"></p>
<p>输入<code>sl-h</code>可以看到彩蛋（没有空格）</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-eb99852eeb36aa5b.gif" alt="字符串火车命令彩蛋"></p>
<blockquote>
<p>这个命令其实是在用户把ls命令输错成sl命令的时候准备的彩蛋。</p>
</blockquote>
<h1 id="8、盯着鼠标看的大眼睛"><a href="#8、盯着鼠标看的大眼睛" class="headerlink" title="8、盯着鼠标看的大眼睛"></a>8、盯着鼠标看的大眼睛</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install x11-apps</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>xeyes</code>，回车，即可看到效果：一双紧盯着鼠标所在位置的大眼睛。</p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-69733edb8e3d12c9.gif" alt="xeyes大眼睛命令"></p>
<h1 id="9、艺术字生成器toilet"><a href="#9、艺术字生成器toilet" class="headerlink" title="9、艺术字生成器toilet"></a>9、艺术字生成器toilet</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install toilet</span><br></pre></td></tr></table></figure>

<p>然后输入下面任意一行命令，通过在命令中加-f更换字体或滤镜，你可以把命令里的<code>Tongji University</code>换成你想要转换的字符。</p>
<p>案例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toilet Tongji University</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-4ab6cce86ecf5f06.png%7CimageView2/2/w/1240" alt="toilet命令1"></p>
<p>案例2 双色字：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toilet -f mono12 -F metal Tongji University</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e49e74b6445a50d7.png%7CimageView2/2/w/1240" alt="toilet命令双色字"></p>
<p>案例3 彩色字：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toilet -f mono12 -F gay Tongji University</span><br></pre></td></tr></table></figure>

<p>输入<code>man toilet</code>查看更多帮助，按<code>q</code>退出。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-777806bcc005bb31.png%7CimageView2/2/w/1240" alt="toilet命令彩色字"></p>
<h1 id="10、艺术字生成器figlet"><a href="#10、艺术字生成器figlet" class="headerlink" title="10、艺术字生成器figlet"></a>10、艺术字生成器figlet</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install figlet</span><br></pre></td></tr></table></figure>

<p>然后输入下面任意一行命令，通过在命令中加-f更换字体或滤镜，你可以把命令里的<code>Tongji University</code>换成你想要转换的字符。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">figlet Tongji University</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-205e39c52eed91a4.png%7CimageView2/2/w/1240" alt="figlet命令1"></p>
<h1 id="11、字符串视频——回归计算机的上古时代"><a href="#11、字符串视频——回归计算机的上古时代" class="headerlink" title="11、字符串视频——回归计算机的上古时代"></a>11、字符串视频——回归计算机的上古时代</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install bb</span><br></pre></td></tr></table></figure>

<p>然后输入<br><code>bb</code>，选择<code>y</code>加音乐，选择<code>8</code>继续，即可看到一段用字符串制作的视频，讲述了视频作者的生涯和使用Linux操作系统的历程，这段视频制作于1997年，基于AAlib平台制作。</p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<blockquote>
<p>这段视频的音乐很带感哦~</p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-7420604404205ad9.gif" alt="bb命令：字符串视频"></p>
<h1 id="12、输出名人名言、古诗词"><a href="#12、输出名人名言、古诗词" class="headerlink" title="12、输出名人名言、古诗词"></a>12、输出名人名言、古诗词</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fortune fortune-zh</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>fortune</code>，即可看到效果。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-345cc951023cc6d6.png%7CimageView2/2/w/1240" alt="fortune命令"></p>
<blockquote>
<p>可以把这个程序设置成每次开机自动启动，每次你登陆的时候就能看到一条新的名人名言或唐诗宋词了。</p>
</blockquote>
<h1 id="13、字符串水族馆：ASCIIquarium"><a href="#13、字符串水族馆：ASCIIquarium" class="headerlink" title="13、字符串水族馆：ASCIIquarium"></a>13、字符串水族馆：ASCIIquarium</h1><p>第一步：安装各种依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libcurses-perl</span><br><span class="line">cd &#x2F;tmp</span><br><span class="line"></span><br><span class="line">wget http:&#x2F;&#x2F;search.cpan.org&#x2F;CPAN&#x2F;authors&#x2F;id&#x2F;K&#x2F;KB&#x2F;KBAUCOM&#x2F;Term-Animation-2.4.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf Term-Animation-2.4.tar.gz</span><br><span class="line">cd Term-Animation-2.4&#x2F;</span><br><span class="line"></span><br><span class="line">sudo perl Makefile.PL &amp;&amp;  make &amp;&amp;   make test</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>第二步：安装软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;tmp</span><br><span class="line">sudo wget https:&#x2F;&#x2F;robobunny.com&#x2F;projects&#x2F;asciiquarium&#x2F;asciiquarium.tar.gz</span><br></pre></td></tr></table></figure>

<p>如果显示文件下载失败，可以点击<code>https://robobunny.com/projects/asciiquarium/asciiquarium.tar.gz</code>下载压缩包，然后通过FileZilla等文件远程传输软件传输到/tmp文件夹中。</p>
<p>然后继续执行下列命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf asciiquarium.tar.gz</span><br><span class="line">cd asciiquarium_1.1&#x2F;</span><br><span class="line">sudo cp asciiquarium &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line">sudo chmod 0755 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;asciiquarium</span><br><span class="line">asciiquarium</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-953feec6877d32ca.gif" alt="字符串水族馆"></p>
<blockquote>
<p><a href="https://robobunny.com/projects/asciiquarium/html/?page=0">ASCIIquarium项目主页</a></p>
</blockquote>
<h1 id="14、会说话的牛"><a href="#14、会说话的牛" class="headerlink" title="14、会说话的牛"></a>14、会说话的牛</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cowsay</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>cowsay “Hello Tongji Univerisity”</code>。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-91cadd9c91f009d4.png%7CimageView2/2/w/1240" alt="cowsay命令"></p>
<p>只需用 <code>-l</code>参数就能看到它能提供的所有动物。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cowsay -l</span><br></pre></td></tr></table></figure>

<p>会输出如下人物，你可以通过<code>-f</code>参数加人物名字来更换说话人物：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Cow files in &#x2F;usr&#x2F;share&#x2F;cowsay&#x2F;cows:</span><br><span class="line">apt beavis.zen bong bud-frogs bunny calvin cheese cock cower daemon default</span><br><span class="line">dragon dragon-and-cow duck elephant elephant-in-snake eyes flaming-sheep</span><br><span class="line">ghostbusters gnu head-in hellokitty kiss kitty koala kosh luke-koala</span><br><span class="line">mech-and-cow meow milk moofasa moose mutilated pony pony-smaller ren sheep</span><br><span class="line">skeleton snowman sodomized-sheep stegosaurus stimpy suse three-eyes turkey</span><br><span class="line">turtle tux unipony unipony-smaller vader vader-koala www</span><br></pre></td></tr></table></figure>

<p>比如更换成hellokitty：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cowsay -f dragon &#39;Hello Tongji Univerisity&#39;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-dcf0c2ce485bbd5e.png%7CimageView2/2/w/1240" alt="更换说话的动物"></p>
<p>也可以利用管道命令，将fortune生成的名人名言在cowsay中输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fortune | cowsay</span><br></pre></td></tr></table></figure>

<p>加个颜色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install lolcat</span><br></pre></td></tr></table></figure>

<p>利用管道命令，让彩色的恐龙大哥说彩色的唐诗：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fortune | cowsay -f stegosaurus | lolcat</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-11d24b0de66c5007.png%7CimageView2/2/w/1240" alt="利用管道命令让彩色动物说话"></p>
<h1 id="15、会说话的牛2"><a href="#15、会说话的牛2" class="headerlink" title="15、会说话的牛2"></a>15、会说话的牛2</h1><blockquote>
<p>注意，本命令只能在桌面所在的命令行界面输入，在远程ssh命令行界面输入会显示“Can’t<br>open display”</p>
</blockquote>
<p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install xcowsay</span><br></pre></td></tr></table></figure>

<p>然后输入 <code>xcowsay “Hello Tongji Univerisity欢迎来同济大学”</code></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-adab2588c11df68b.png%7CimageView2/2/w/1240" alt="xcowsay说中文"></p>
<h1 id="16、日历"><a href="#16、日历" class="headerlink" title="16、日历"></a>16、日历</h1><p>直接在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cal 12 2018</span><br></pre></td></tr></table></figure>

<p>即可看到2018年12月的日历。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-d8b38641704a03c0.png%7CimageView2/2/w/1240" alt="日历命令"></p>
<p>有趣的是，如果你输入。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cal 9 1752</span><br></pre></td></tr></table></figure>

<p>你会发现这个月少了11天，这是因为当时大英帝国美洲殖民地的历法从凯撒历法换成了格里高利历法，凯撒历法要迟11天，所以这11天成了日历上的空白期。</p>
<p><a href="http://blog.sina.com.cn/s/blog_8713f2c501013md6.html">1752年9月为什么少了11天？</a></p>
<h1 id="17、yes命令"><a href="#17、yes命令" class="headerlink" title="17、yes命令"></a>17、yes命令</h1><p>直接在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yes Tongji University</span><br><span class="line">yes Tongji University | lolcat</span><br></pre></td></tr></table></figure>

<p>就会看到无穷无尽输出的Tongji University</p>
<p>按<code>ctrl</code>+<code>c</code>退出。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-cb061c5f4e9a2dcc.gif" alt="yes命令"></p>
<h1 id="18、分解因数"><a href="#18、分解因数" class="headerlink" title="18、分解因数"></a>18、分解因数</h1><p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">factor 60</span><br></pre></td></tr></table></figure>

<p>即可看到60的分解质因数的结果</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-552691f5ab69af8c.png%7CimageView2/2/w/1240" alt="factor命令：分解质因数"></p>
<h1 id="19、screenfetch-显示系统、主题信息"><a href="#19、screenfetch-显示系统、主题信息" class="headerlink" title="19、screenfetch:显示系统、主题信息"></a>19、screenfetch:显示系统、主题信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install screenfetch</span><br><span class="line">screenfetch</span><br></pre></td></tr></table></figure>

<p>在开源社区或程序员社区提问时，可以通过这条命令，直接截图，就能很清晰地描述自己的系统环境。</p>
<p>在Ubuntu云服务器上运行：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-11ec8a07f22a4846.png%7CimageView2/2/w/1240" alt="在Ubuntu云服务器上运行screenfetch命令"></p>
<p>在树莓派上运行：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-47504f3bebc05a58.png%7CimageView2/2/w/1240" alt="树莓派上运行screenfetch命令"></p>
<h1 id="20、linux各发行版logo图片及系统信息"><a href="#20、linux各发行版logo图片及系统信息" class="headerlink" title="20、linux各发行版logo图片及系统信息"></a>20、linux各发行版logo图片及系统信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install linuxlogo</span><br><span class="line">linux_logo</span><br><span class="line">linux_logo -f -L list</span><br><span class="line">sudo apt-get install neofetch</span><br><span class="line">neofetch</span><br></pre></td></tr></table></figure>

<p>在ubuntu云服务器上运行linux_logo</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-ba7b79fa4009f951.png%7CimageView2/2/w/1240" alt="在ubuntu云服务器上运行linux\_logo"></p>
<p>在树莓派上运行linux_logo</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-d03ff4b5604d5309.png%7CimageView2/2/w/1240" alt="在树莓派上运行linux\_logo命令"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-f4549aa6f834cba2.png%7CimageView2/2/w/1240" alt="所有支持打印logo的linux发行版"></p>
<p>循环打印所有支持打印的图标</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in &#123;1..30&#125;;do linux_logo -f -L $i;sleep 0.5;done</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-eca7597c796ced96.gif" alt="打印所有支持的logo"></p>
<h1 id="21、图片转ASCII画风"><a href="#21、图片转ASCII画风" class="headerlink" title="21、图片转ASCII画风"></a>21、图片转ASCII画风</h1><blockquote>
<p>这条命令在树莓派上运行会出问题，建议在云主机或虚拟机上运行。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install aview imagemagick</span><br><span class="line"></span><br><span class="line">wget http:&#x2F;&#x2F;labfile.oss.aliyuncs.com&#x2F;courses&#x2F;1&#x2F;Linus.png</span><br><span class="line"></span><br><span class="line">asciiview Linus.png</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-7db67728f6ca8b3b.png%7CimageView2/2/w/1240" alt="Linux之父：Linus的照片"></p>
<p>你可以把wget后面的链接换成任意图片的URL。</p>
<p>比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;www.shumeipai.wang&#x2F;bingbingbing.jpg</span><br><span class="line">asciiview bingbingbing.jpg</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-27bab579984d63cc.png%7CimageView2/2/w/1240" alt="范冰冰照片ASCII字符串处理"></p>
<h1 id="22、反转字符命令"><a href="#22、反转字符命令" class="headerlink" title="22、反转字符命令"></a>22、反转字符命令</h1><p>在命令行中输入<code>rev</code>，打开rev界面，然后输入任意字符，比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I am a student in Tongji Univerisity</span><br></pre></td></tr></table></figure>

<p>按回车，即可看到字符反转之后的结果</p>
<p>按<code>ctrl</code>+<code>c</code>退出rev界面回到命令行界面。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;I am a student in Tongji Univerisity&quot; | rev</span><br></pre></td></tr></table></figure>

<p>将一句话中所有单词的顺序反转,但在单词内部字母顺序不变</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;I am a student in Tongji University&quot; | rev | tr &#39; &#39; &#39;\n&#39; | tac | tr &#39;\n&#39; &#39; &#39;| rev</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-1953b01188a746e4.png%7CimageView2/2/w/1240" alt="rev命令"></p>
<h1 id="23、打字机pv命令：字幕一个个匀速显示出来"><a href="#23、打字机pv命令：字幕一个个匀速显示出来" class="headerlink" title="23、打字机pv命令：字幕一个个匀速显示出来"></a>23、打字机pv命令：字幕一个个匀速显示出来</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install pv</span><br><span class="line">echo &quot;Tongji Opensource&quot; | pv -qL 10</span><br><span class="line">cal | pv -qL 10</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-bc6f86e12e776681.gif" alt="pv打字机命令"></p>
<h1 id="24、从删库到跑路-sudo-rm-rf"><a href="#24、从删库到跑路-sudo-rm-rf" class="headerlink" title="24、从删库到跑路 sudo rm -rf /*"></a>24、从删库到跑路 sudo rm -rf /*</h1><p><img src= "/img/loading.gif" data-lazy-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1539792611926&di=a261ba9fadfa7ba727ef2a7c724016e1&imgtype=0&src=http://i0.hdslb.com/bfs/archive/b6d4f8aa58841f6e8674c3bd46126e5f8ad5fc7f.jpg" alt="sudo rm -rf
/"></p>
<blockquote>
<p>友情提示：千万不要轻易尝试这个命令，特别是在运行有网站服务器、数据库的Linux主机上</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm -rf &#x2F;*</span><br></pre></td></tr></table></figure>

<ul>
<li>  sudo：获取root管理员权限</li>
<li>  rm：remove，即删除</li>
<li>  -rf：r表示递归删除，即删除所有的子目录，f表示不需要再进行确认</li>
<li>  /：home目录</li>
<li>  *：所有文件</li>
</ul>
<p><strong>也就是说，这条命令是删除这台Linux主机上的所有文件，甚至包括开机文件</strong></p>
<p>关于这条命令的一些有趣的图片：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-057901398c109d38.GIF" alt="删库大爆炸"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-9108c4583143f501.GIF" alt="从删库到跑路1"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e42e61a486b7d1fd.GIF" alt="数据库删了肯定要跑路啊"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-77ce9a2551b16ad4.GIF" alt="从删库到跑路2"></p>
<h1 id="25、播放星球大战"><a href="#25、播放星球大战" class="headerlink" title="25、播放星球大战"></a>25、播放星球大战</h1><p>这条命令在windows上都可以运行</p>
<p>1、打开控制面板，找到”启动或关闭Windows功能“，然后打开Telnet客户端。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e13443f55165768d.png%7CimageView2/2/w/1240" alt="控制面板"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-98d0012f082f5cc2.png%7CimageView2/2/w/1240" alt="打开Telnet应用"></p>
<p>2、用管理员模式打开DOS命令行界面，输入以下命令，回车。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-212d2be6bf953cea.png%7CimageView2/2/w/1240" alt="进入windows命令行"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet towel.blinkenlights.nl</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-a9b65eda982e05e4.gif" alt="字符串星球大战"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-bb927898d4bd7a3a.gif" alt="字符串星球大战"></p>
<h1 id="26、让命令行说话"><a href="#26、让命令行说话" class="headerlink" title="26、让命令行说话"></a>26、让命令行说话</h1><blockquote>
<p>运行这个命令不能通过远程连接，必须通过音响</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install espeak</span><br><span class="line">espeak &#39;Hello my dariling&#39;</span><br></pre></td></tr></table></figure>

<h1 id="27、随机产生人名与地址"><a href="#27、随机产生人名与地址" class="headerlink" title="27、随机产生人名与地址"></a>27、随机产生人名与地址</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install rig</span><br><span class="line">rig</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-e2b6b7c5e45ce7bc.png%7CimageView2/2/w/1240" alt="rig命令"></p>
<h1 id="28、超级牛力——包管理器的彩蛋"><a href="#28、超级牛力——包管理器的彩蛋" class="headerlink" title="28、超级牛力——包管理器的彩蛋"></a>28、超级牛力——包管理器的彩蛋</h1><p>在Ubuntu和Debian上，apt-get包管理器内嵌着一个彩蛋。<br>如果你在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get help</span><br></pre></td></tr></table></figure>

<p>在最后一行能找到</p>
<p>This APT has Super Cow Powers。</p>
<p>本APT具有超级牛力。</p>
<p>则说明你的系统可以运行这个菜单。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-13ff4a649e7ce51d.png%7CimageView2/2/w/1240" alt="&quot;超级牛力&quot;彩蛋"></p>
<p>在命令行界面输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get moo</span><br></pre></td></tr></table></figure>

<p>即可看到这个彩蛋。</p>
<p>aptitiude包管理器也有类似的彩蛋</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aptitude moo</span><br><span class="line">aptitude moo -vv</span><br><span class="line">aptitude moo -vvv</span><br><span class="line">aptitude moo -vvvv</span><br><span class="line">aptitude moo -vvvvv</span><br><span class="line">aptitude moo -vvvvvv</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-f4d6aad28df0ea0d.png%7CimageView2/2/w/1240" alt="apititude包管理器彩蛋"></p>
<blockquote>
<p>这个彩蛋的灵感来自于法国作家安托万·德·圣·埃克苏佩里童话小说《小王子》的第一章</p>
</blockquote>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-b08afa0b5cc8d6bb.png%7CimageView2/2/w/1240" alt="小王子插图：法国作家安托万·德·圣·埃克苏佩里童话小说"></p>
<h1 id="29、命令行游戏bastet：俄罗斯方块"><a href="#29、命令行游戏bastet：俄罗斯方块" class="headerlink" title="29、命令行游戏bastet：俄罗斯方块"></a>29、命令行游戏bastet：俄罗斯方块</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install bastet</span><br><span class="line">bastet</span><br></pre></td></tr></table></figure>

<p>左右键控制方块移动，上键控制方块旋转。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-4187991a1d0416de.gif" alt="命令行游戏bastet：俄罗斯方块"></p>
<h1 id="30、命令行游戏ninvaders：太空入侵者"><a href="#30、命令行游戏ninvaders：太空入侵者" class="headerlink" title="30、命令行游戏ninvaders：太空入侵者"></a>30、命令行游戏ninvaders：太空入侵者</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ninvaders</span><br><span class="line">ninvaders</span><br></pre></td></tr></table></figure>

<p>按空格键发射子弹。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-cab4c13405bd2dd9.gif" alt="命令行游戏ninvaders：太空入侵者"></p>
<h1 id="31、命令行游戏pacman4console：吃豆人"><a href="#31、命令行游戏pacman4console：吃豆人" class="headerlink" title="31、命令行游戏pacman4console：吃豆人"></a>31、命令行游戏pacman4console：吃豆人</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install pacman4console</span><br><span class="line">pacman4console</span><br></pre></td></tr></table></figure>

<p>使用方向键控制移动。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-29f0fdce7a5071c5.gif" alt="命令行游戏pacman4console：吃豆人"></p>
<h1 id="32、命令行游戏nSnake：贪吃蛇"><a href="#32、命令行游戏nSnake：贪吃蛇" class="headerlink" title="32、命令行游戏nSnake：贪吃蛇"></a>32、命令行游戏nSnake：贪吃蛇</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nsnake</span><br><span class="line">nsnake</span><br></pre></td></tr></table></figure>

<p>使用方向键控制。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-57c0b9360d55d9b0.gif" alt="nSnake贪吃蛇命令行小游戏"></p>
<h1 id="33、命令行游戏Greed：赢者通吃"><a href="#33、命令行游戏Greed：赢者通吃" class="headerlink" title="33、命令行游戏Greed：赢者通吃"></a>33、命令行游戏Greed：赢者通吃</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install greed</span><br><span class="line">greed</span><br></pre></td></tr></table></figure>

<p>数字表示下一步可前进的步数，游戏的目标是在咬到自己尾巴之前尽可能多走几步。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-f139804315451e0b.gif" alt="命令行游戏Greed：赢者通吃"></p>
<h1 id="34、命令行游戏Air-Traffic-Controller：空中塔台控制"><a href="#34、命令行游戏Air-Traffic-Controller：空中塔台控制" class="headerlink" title="34、命令行游戏Air Traffic Controller：空中塔台控制"></a>34、命令行游戏Air Traffic Controller：空中塔台控制</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install bsdgames</span><br><span class="line">atc</span><br></pre></td></tr></table></figure>

<p>在玩之前，你可以先输入<code>man atc</code>查看这个游戏的说明文档。游戏的目标是通过一系列命令输入，引导飞机起飞和降落，进行空中塔台调度。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-be5ab52abe3e42f1.gif" alt="空中塔台调度游戏atc"></p>
<h1 id="35、命令行游戏backgammon：双陆棋"><a href="#35、命令行游戏backgammon：双陆棋" class="headerlink" title="35、命令行游戏backgammon：双陆棋"></a>35、命令行游戏backgammon：双陆棋</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install bsdgames</span><br><span class="line">backgammon</span><br></pre></td></tr></table></figure>

<p>这是一款1997年制作的老游戏，游戏开始的时候可以阅读相关规则介绍。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-71ea0e1e0d7ba7f9.png%7CimageView2/2/w/1240" alt="命令行游戏双陆棋"></p>
<h1 id="36、命令行游戏moonbuggy：月球战车"><a href="#36、命令行游戏moonbuggy：月球战车" class="headerlink" title="36、命令行游戏moonbuggy：月球战车"></a>36、命令行游戏moonbuggy：月球战车</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install moon-buggy</span><br><span class="line">moon-buggy</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-d1cecec4d7ac19eb.gif" alt="命令行游戏moonbuggy：月球战车"></p>
<h1 id="37、命令行游戏2048"><a href="#37、命令行游戏2048" class="headerlink" title="37、命令行游戏2048"></a>37、命令行游戏2048</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;mevdschee&#x2F;2048.c&#x2F;master&#x2F;2048.c</span><br><span class="line">gcc -o 2048 2048.c</span><br><span class="line">.&#x2F;2048</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-49fff6bd836aeffd.gif" alt="命令行游戏2048"></p>
<h1 id="38、命令行也能联机玩网游：Tron"><a href="#38、命令行也能联机玩网游：Tron" class="headerlink" title="38、命令行也能联机玩网游：Tron"></a>38、命令行也能联机玩网游：Tron</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh sshtron.zachlatta.com</span><br></pre></td></tr></table></figure>

<p>使用wasd四个键控制蛇的移动，游戏的目标是既不要咬到别人也不要咬到自己，活着的时间越长分数越高。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-a88c4f292ebcd0a8.gif" alt="命令行也能联机玩网游：Tron"></p>
<h1 id="39、命令行游戏：巨洞冒险"><a href="#39、命令行游戏：巨洞冒险" class="headerlink" title="39、命令行游戏：巨洞冒险"></a>39、命令行游戏：巨洞冒险</h1><p>巨洞冒险Colossal Cave Adventure，又名 ADVENT、Clossal Cave 或<br>Adventure，是八十年代初到九十年代末最受欢迎的基于文字的冒险游戏。在 1976<br>年，一个叫 Will Crowther<br>的程序员开发了这款游戏的一个早期版本，之后另一位叫 Don Woods<br>的程序员改进了这款游戏，为它添加了许多新元素，包括计分系统以及更多的幻想角色和场景。这款游戏最初是为<br>PDP-10<br>开发的，这是一种历史悠久的大型计算机。后来，它被移植到普通家用台式电脑上，比如<br>IBM PC 和 Commodore 64。游戏的最初版使用 Fortran<br>开发，之后在八十年代初它被微软加入到 MS-DOS 1.0 当中。</p>
<p>游戏的主要目标是找到一个传言中藏有大量宝藏和金子的洞穴并活着离开它。这款游戏的灵感主要来源于原作者<br>Will Crowther<br>丰富的洞穴探索的经历。他曾经经常在洞穴中冒险，特别是肯塔基州的猛犸洞Mammoth<br>Cave。因为游戏中的洞穴结构大体基于猛犸洞，你也许会注意到游戏中的场景和现实中的猛犸洞的相似之处。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-yaml libedit-dev</span><br><span class="line">sudo pip3 install PyYAML</span><br><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;esr&#x2F;open-adventure.git</span><br><span class="line">cd open-adventure</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">advent</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-4c3cd5e758ac0d8b.png%7CimageView2/2/w/1240" alt="命令行游戏巨洞冒险"></p>
<h1 id="40、打印圆周率后小数点若干位"><a href="#40、打印圆周率后小数点若干位" class="headerlink" title="40、打印圆周率后小数点若干位"></a>40、打印圆周率后小数点若干位</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install pi</span><br><span class="line">pi 50</span><br></pre></td></tr></table></figure>

<p>打印小数点后若干位的圆周率。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13714448-5e6814eea9cdf956.png%7CimageView2/2/w/1240" alt="圆周率小数点后若干位"></p>
<h1 id="扩展阅读与参考文献"><a href="#扩展阅读与参考文献" class="headerlink" title="扩展阅读与参考文献"></a>扩展阅读与参考文献</h1><blockquote>
<p><a href="https://www.cnblogs.com/1394htw/p/6358737.html?utm_source=itdadao&utm_medium=referral">10个非常有趣的Linux命令</a></p>
<p><a href="https://www.cnblogs.com/1394htw/p/6358737.html?utm_source=itdadao&utm_medium=referral">超有趣的几个Linux命令，你都用过吗？</a></p>
<p><a href="https://blog.csdn.net/tq384998430/article/details/54925742">Linux中管道命令的用法</a></p>
<p><a href="https://aotu.io/notes/2016/11/22/figlet/">FIGlet初识</a></p>
<p><a href="https://github.com/ruanyf/fortunes">fortune中文格言库</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2015/04/fortune.html">阮一峰的网络日志：fortune<br>命令简介</a></p>
<p><a href="http://blog.sina.com.cn/s/blog_8713f2c501013md6.html">1752年9月为什么少了11天？</a></p>
<p><a href="https://www.cnblogs.com/Nice-Boy/p/6091307.html">Linux 奇技淫巧</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/33267251">十大 Linux 命令行游戏</a></p>
<p><a href="https://blog.csdn.net/F8qG7f9YD02Pe/article/details/78994286">巨洞冒险：史上最有名的经典文字冒险游戏 | Linux<br>中国</a></p>
<p><a href="https://blog.csdn.net/jsjxy2009/article/details/39207595">Shell常识–基本函数和简单命令rev–总结自《Linux Shell<br>脚本攻略》</a></p>
<p><a href="https://blog.csdn.net/qq_41741971/article/details/82053290">意想不到的有趣linux命令18个，玩得溜</a></p>
<p><a href="https://blog.csdn.net/liudsl/article/details/79200134">apt 和<br>apt-get的区别</a></p>
<p><a href="https://github.com/yaronn/blessed-contrib">blessed-contrib项目主页</a></p>
<p><a href="https://github.com/dustinkirkland/hollywood">hollywood项目主页</a></p>
<p><a href="https://blog.csdn.net/crazygolf/article/details/48383869/">启用Windows中的Telnet功能一起看DOS版星球大战</a></p>
<p><a href="www.raspberry.org">树莓派官方网站</a></p>
<p><a href="https://www.raspberrypi.org/magpi">树莓派官方杂志MagPi（可免费下载PDF）</a></p>
<p><a href="https://github.com/TommyZihao/MagPi_Chinese">子豪兄翻译的MagPi杂志优质文章</a></p>
<p><a href="http://shumeipai.nxez.com/">树莓派实验室</a></p>
<p><a href="https://sspai.com/">少数派</a></p>
<p><a href="https://github.com/TommyZihao/ZihaoTutorialOfRaspberryPi">子豪兄的树莓派零基础教程<br>Github代码仓库</a></p>
<p><a href="https://github.com/TommyZihao">子豪兄的Github首页</a></p>
</blockquote>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO安装教程</title>
    <url>/hexo.html</url>
    <content><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201217223938.png" alt="site"><br>现在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。</p>
<p>而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p>
<p>那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p>
<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>
<p>教程分三个部分，</p>
<ul>
<li>  第一部分：hexo的初级搭建还有部署到github page上，以及个人域名的绑定。</li>
<li>  第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流</li>
<li>  第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</li>
</ul>
<hr>
<h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><p>hexo的初级搭建还有部署到github page上，以及个人域名的绑定。</p>
<h1 id="Hexo简介-1"><a href="#Hexo简介-1" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>
<h1 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h1><ol>
<li> 安装Git</li>
<li> 安装Node.js</li>
<li> 安装Hexo</li>
<li> GitHub创建个人仓库</li>
<li> 生成SSH添加到GitHub</li>
<li> 将hexo部署到GitHub</li>
<li> 设置个人域名</li>
<li> 发布文章</li>
</ol>
<h1 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h1><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a></p>
<p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p>
<p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p>
<pre><code>sudo apt-get install git</code></pre>
<p>安装好后，用<code>git --version</code> 来查看一下版本</p>
<h1 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h1><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p>
<p>windows：<a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本就行了。</p>
<p>linux：</p>
<pre><code>sudo apt-get install nodejs
sudo apt-get install npm</code></pre>
<p>安装完后，打开命令行</p>
<pre><code>node -v
npm -v</code></pre>
<p>检查一下有没有安装成功</p>
<p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p>
<h1 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h1><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p>
<p>输入命令</p>
<pre><code>npm install -g hexo-cli</code></pre>
<p>依旧用<code>hexo -v</code>查看一下版本</p>
<p>至此就全部安装完了。</p>
<p>接下来初始化一下hexo</p>
<pre><code>hexo init myblog</code></pre>
<p>这个myblog可以自己取什么名字都行，然后</p>
<pre><code>cd myblog //进入这个myblog文件夹
npm install</code></pre>
<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li><p>  node_modules: 依赖包</p>
</li>
<li><p>  public：存放生成的页面</p>
</li>
<li><p>  scaffolds：生成文章的一些模板</p>
</li>
<li><p>  source：用来存放你的文章</p>
</li>
<li><p>  themes：主题</p>
</li>
<li><p>** _config.yml: 博客的配置文件**</p>
<p>  hexo g<br>  hexo server</p>
</li>
</ul>
<p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p>
<p>大概长这样：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master/d40b6c29gy1fvrksvj6e0j211c0f2n60.jpg"><br>使用ctrl+c可以把服务关掉。</p>
<h1 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h1><p>首先，你先要有一个GitHub账户，去注册一个吧。</p>
<p>注册完登录后，在GitHub.com中看到一个New repository，新建仓库<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master/d40b6c29gy1fvrkstcm7ej20ei0c1aah.jpg"></p>
<p>创建一个和你用户名相同的仓库，<a href="http://后面加.github.io/">后面加.github.io</a>，只有这样，将来要部署到GitHub page的时候，才会被识别，<a href="http://也就是xxxx.github.io/">也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219212458.png"></p>
<p>点击create repository。</p>
<h1 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h1><p>回到你的git bash中，</p>
<pre><code>git config --global user.name &quot;yourname&quot;
git config --global user.email &quot;youremail&quot;</code></pre>
<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p>
<p>可以用以下两条，检查一下你有没有输对</p>
<pre><code>git config user.name
git config user.email</code></pre>
<p>然后创建SSH,一路回车</p>
<pre><code>ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre>
<p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219212536.png"></p>
<p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>
<p>而后在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master/d40b6c29gy1fvrkstdifaj210s0gfjrz.jpg">****</p>
<p>在gitbash中，查看是否成功</p>
<pre><code>ssh -T git@github.com</code></pre>
<h1 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h1><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p>
<pre><code>deploy:
  type: git
  repo: https://github.com/YourgithubName/YourgithubName.github.io.git
  branch: master</code></pre>
<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>
<pre><code>npm install hexo-deployer-git --save</code></pre>
<p>然后</p>
<pre><code>hexo clean
hexo generate
hexo deploy</code></pre>
<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>
<p>注意deploy时可能要你输入username和password。</p>
<p>得到下图就说明部署成功了，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！！<br><img src= "/img/loading.gif" data-lazy-src="https://ww1.sinaimg.cn/large/d40b6c29gy1fvrkstbtvfj20lq01u3yd.jpg"></p>
<h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><p>hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流。</p>
<h1 id="1-hexo基本配置"><a href="#1-hexo基本配置" class="headerlink" title="1. hexo基本配置"></a>1. hexo基本配置</h1><p>在文件根目录下的<code>_config.yml</code>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p>
<h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><p>参数</p>
<p>描述</p>
<p><code>title</code></p>
<p>网站标题</p>
<p><code>subtitle</code></p>
<p>网站副标题</p>
<p><code>description</code></p>
<p>网站描述</p>
<p><code>author</code></p>
<p>您的名字</p>
<p><code>language</code></p>
<p>网站使用的语言</p>
<p><code>timezone</code></p>
<p>网站时区。Hexo 默认使用您电脑的时区。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a>。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</p>
<p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p>
<h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>参数</p>
<p>描述</p>
<p><code>url</code></p>
<p>网址</p>
<p><code>root</code></p>
<p>网站根目录</p>
<p><code>permalink</code></p>
<p>文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</p>
<p><code>permalink_defaults</code></p>
<p>永久链接中各部分的默认值</p>
<p>在这里，你需要把<code>url</code>改成你的网站域名。</p>
<p>permalink，也就是你生成某个文章时的那个链接格式。</p>
<p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<code>http://yoursite.com/2018/09/05/temp</code>。</p>
<p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p>
<p>参数</p>
<p>结果</p>
<p><code>:year/:month/:day/:title/</code></p>
<p>2013/07/14/hello-world</p>
<p><code>:year-:month-:day-:title.html</code></p>
<p>2013-07-14-hello-world.html</p>
<p><code>:category/:title</code></p>
<p>foo/bar/hello-world</p>
<p>再往下翻，中间这些都默认就好了。</p>
<pre><code>theme: landscape

# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: &lt;repository url&gt;
  branch: [branch]</code></pre>
<p>​    </p>
<p><code>theme</code>就是选择什么主题，也就是在<code>theme</code>这个文件夹下，在官网上有很多个主题，默认给你安装的是<code>lanscape</code>这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在<code>theme</code>文件夹下，再修改这个参数就可以了。</p>
<p>接下来这个<code>deploy</code>就是网站的部署的，<code>repo</code>就是仓库(<code>Repository</code>)的简写。<code>branch</code>选择仓库的哪个分支。这个在之前进行github page部署的时候已经修改过了，不再赘述。而这个在后面进行双平台部署的时候会再次用到。</p>
<h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<pre><code>title: Hello World
date: 2013/7/13 20:46:25
---</code></pre>
<p>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>
<p>参数</p>
<p>描述</p>
<p><code>layout</code></p>
<p>布局</p>
<p><code>title</code></p>
<p>标题</p>
<p><code>date</code></p>
<p>建立日期</p>
<p><code>updated</code></p>
<p>更新日期</p>
<p><code>comments</code></p>
<p>开启文章的评论功能</p>
<p><code>tags</code></p>
<p>标签（不适用于分页）</p>
<p><code>categories</code></p>
<p>分类（不适用于分页）</p>
<p><code>permalink</code></p>
<p>覆盖文章网址</p>
<p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p>
<pre><code>categories:
- Diary
tags:
- PS3
- Games</code></pre>
<h3 id="layout（布局）"><a href="#layout（布局）" class="headerlink" title="layout（布局）"></a>layout（布局）</h3><p>当你每一次使用代码</p>
<pre><code>hexo new paper</code></pre>
<p>它其实默认使用的是<code>post</code>这个布局，也就是在<code>source</code>文件夹下的<code>_post</code>里面。</p>
<p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>
<p>布局</p>
<p>路径</p>
<p><code>post</code></p>
<p><code>source/_posts</code></p>
<p><code>page</code></p>
<p><code>source</code></p>
<p><code>draft</code></p>
<p><code>source/_drafts</code></p>
<p>而new这个命令其实是：</p>
<pre><code>hexo new [layout] &lt;title&gt;</code></pre>
<p>只不过这个layout默认是post罢了。</p>
<h4 id="page"><a href="#page" class="headerlink" title="page"></a>page</h4><p>如果你想另起一页，那么可以使用</p>
<pre><code>hexo new page board</code></pre>
<p>系统会自动给你在source文件夹下创建一个board文件夹，<a href="http://以及board文件夹中的index.md/">以及board文件夹中的index.md</a>，这样你访问的board对应的链接就是<code>http://xxx.xxx/board</code></p>
<h4 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h4><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p>
<pre><code>hexo new draft newpage</code></pre>
<p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p>
<pre><code>hexo server --draft</code></pre>
<p>在本地端口中开启服务预览。</p>
<p>如果你的草稿文件写完了，想要发表到post中，</p>
<pre><code>hexo publish draft newpage</code></pre>
<p>就会自动把newpage.md发送到post中。</p>
<hr>
<h1 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2. 更换主题"></a>2. 更换主题</h1><p>到这一步，如果你觉得默认的<code>landscape</code>主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。<a href="https://hexo.io/themes/">点这里</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master/d40b6c29gy1fvrkswpjhtj21fu0rhtp6.jpg"></p>
<p>这里有200多个主题可以选。不过最受欢迎的就是那么几个，比如<a href="https://github.com/theme-next/hexo-theme-next">NexT主题</a>，非常的简洁好看，大多数人都选择这个，关于这个的教程也比较多。不过我选择的是<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a>这个主题</p>
<p>直接在github链接上下载下来，然后放到<code>theme</code>文件夹下就行了，然后再在刚才说的配置文件中把<code>theme</code>换成那个主题文件夹的名字，它就会自动在<code>theme</code>文件夹中搜索你配置的主题。</p>
<h3 id="menu（菜单栏）"><a href="#menu（菜单栏）" class="headerlink" title="menu（菜单栏）"></a>menu（菜单栏）</h3><p>也就是上面菜单栏上的这些东西。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219212726.png"></p>
<p>其中，关于这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令</p>
<pre><code>hexo new page about</code></pre>
<p>它就会在根目录下<code>source</code>文件夹中新建了一个<code>about</code>文件夹，<a href="http://以及index.md/">以及index.md</a>，在index.md中写上你想要写的东西，就可以在网站上展示出来了。</p>
<p>如果你想要自己再自定义一个菜单栏的选项，那么就</p>
<pre><code>hexo new page yourdiy</code></pre>
<p>然后在主题配置文件的menu菜单栏添加一个 <code>Yourdiy : /yourdiy</code>，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在<code>languages</code>文件夹中，找到<code>zh-CN.yml</code>，在index中添加<code>yourdiy: &#39;中文意思&#39;</code>就可以显示中文了。</p>
<h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p><strong>1. 什么是RSS？</strong></p>
<p>RSS也就是订阅功能，你可以理解为类似与订阅公众号的功能，来订阅各种博客，杂志等等。</p>
<p><strong>2. 为什么要用RSS？</strong></p>
<p>就如同订阅公众号一样，你对某个公众号感兴趣，你总不可能一直时不时搜索这个公众号来看它的文章吧。博客也是一样，如果你喜欢某个博主，或者某个平台的内容，你可以通过RSS订阅它们，然后在RSS阅读器上可以实时推送这些消息。现在网上的垃圾消息太多了，如果你每一天都在看这些消息中度过，漫无目的的浏览，只会让你的时间一点一点的流逝，太不值得了。如果你关注的博主每次都发的消息都是精华，而且不是每一天十几条几十条的轰炸你，那么这个博主就值得你的关注，你就可以通过RSS订阅他。</p>
<p>在我的理解中，如果你不想每天都被那些没有质量的消息轰炸，只想安安静静的关注几个博主，每天看一些有质量的内容也不用太多，那么RSS订阅值得你的拥有。</p>
<p><strong>3. 添加RSS功能</strong></p>
<p>先安装RSS插件</p>
<pre><code>npm i hexo-generator-feed</code></pre>
<p>而后在你整个项目的<code>_config.yml</code>中找到Extensions，添加：</p>
<pre><code># Extensions
## Plugins: https://hexo.io/plugins/
#RSS订阅
plugin:
- hexo-generator-feed
#Feed Atom
feed:
  type: atom
  path: atom.xml
  limit: 20</code></pre>
<p>这个时候你的RSS链接就是 域名<code>/atom.xml</code>了。</p>
<p>所以，在主题配置文件中的这个<code>social links</code>，开启RSS的页面功能，这样你网站上就有那个像wifi一样符号的RSS logo了，注意空格。</p>
<pre><code>rss: /atom.xml</code></pre>
<p><strong>4. 如何关注RSS？</strong></p>
<p>首先，你需要一个RSS阅读器，在这里我推荐<code>inoreader</code>，宇宙第一RSS阅读器，而且中文支持的挺好。不过它没有PC端的程序，只有网页版，chrome上有插件。在官网上用google账号或者自己注册账号登录，就可以开始你的关注之旅了。</p>
<p>每次需要关注某个博主时，就点开他的RSS链接，把链接复制到<code>inoreader</code>上，就能关注了，当然，如果是比较大众化的很厉害的博主，你直接搜名字也可以的，比如每个人都非常佩服的阮一峰大师，直接在阅读器上搜索<code>阮一峰</code>，应该就能出来了。</p>
<p>我关注的比如，阮一峰的网络日志，月光博客，知乎精选等，都很不错。当然，还有我！！赶快关注我吧！你值得拥有：<a href="http://fangzh.top/atom.xml">http://fangzh.top/atom.xml</a></p>
<p>在安卓端，inoreader也有下载，不过因为国内google是登录不了的，你需要在inoreader官网上把你的密码修改了，然后就可以用账户名和密码登录了。</p>
<p>在IOS端，没用过，好像是reader 3可以支持inoreader账户，还有个readon也不错，可以去试试。</p>
<h3 id="widgets-侧边栏"><a href="#widgets-侧边栏" class="headerlink" title="widgets(侧边栏)"></a>widgets(侧边栏)</h3><p>侧边栏的小标签，如果你想自己增加一个，比如我增加了一个联系方式，那么我把<code>communication</code>写在上面，在<code>zh-CN.yml</code>中的<code>sidebar</code>，添加<code>communication: &#39;中文&#39;</code>。</p>
<p>然后在<code>hueman/layout/widget</code>中添加一个<code>communicaiton.ejs</code>，填入模板：</p>
<pre><code>&lt;% if (site.posts.length) &#123; %&gt;
    &lt;div class=&quot;widget-wrap widget-list&quot;&gt;
        &lt;h3 class=&quot;widget-title&quot;&gt;&lt;%= __(&#39;sidebar.communiation&#39;) %&gt;&lt;/h3&gt;
        &lt;div class=&quot;widget&quot;&gt;
            &lt;!--这里添加你要写的内容--&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;% &#125; %&gt;</code></pre>
<h3 id="search-搜索框"><a href="#search-搜索框" class="headerlink" title="search(搜索框)"></a>search(搜索框)</h3><p>默认搜索框是不能够用的，</p>
<blockquote>
<p>you need to install <code>hexo-generator-json-content</code> before using Insight Search</p>
</blockquote>
<p>它已经告诉你了，如果想要使用，就安装这个插件。</p>
<h3 id="comment-评论系统"><a href="#comment-评论系统" class="headerlink" title="comment(评论系统)"></a>comment(评论系统)</h3><p>这里的多数都是国外的，基本用不了。这个<code>valine</code>好像不错，还能统计文章阅读量，可以自己试一试，<a href="https://valine.js.org/quickstart.html#npm">链接</a>。</p>
<h3 id="miscellaneous-其他"><a href="#miscellaneous-其他" class="headerlink" title="miscellaneous(其他)"></a>miscellaneous(其他)</h3><p>这里我就改了一个<code>links</code>，可以添加友链。注意空格要对！不然会报错！</p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>整个主题看起来好像很复杂的样子，但是仔细捋一捋其实也比较流畅，</p>
<ul>
<li>  languages: 顾名思义</li>
<li>  layout：布局文件，其实后期想要修改自定义网站上的东西，添加各种各样的信息，主要是在这里修改，其中<code>comment</code>是评论系统，<code>common</code>是常规的布局，最常修改的在这里面，比如修改页面<code>head</code>和<code>footer</code>的内容。</li>
<li>  scripts：js脚本，暂时没什么用</li>
<li>  source：里面放了一些css的样式，以及图片</li>
</ul>
<hr>
<hr>
<h1 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h1><p>hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</p>
<p>本文参考了: <a href="http://visugar.com/2017/08/01/20170801HexoPlugins/">visugar.com</a>这里面说的很详细了。</p>
<h1 id="1-SEO优化"><a href="#1-SEO优化" class="headerlink" title="1. SEO优化"></a>1. SEO优化</h1><p>推广是很麻烦的事情，怎么样别人才能知道我们呢，首先需要让搜索引擎收录你的这个网站，别人才能搜索的到。那么这就需要SEO优化了。</p>
<blockquote>
<p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p>
</blockquote>
<h3 id="百度seo"><a href="#百度seo" class="headerlink" title="百度seo"></a>百度seo</h3><p>刚建站的时候是没有搜索引擎收录我们的网站的。可以在搜索引擎中输入<code>site:&lt;域名&gt;</code></p>
<p>来查看一下。</p>
<p><strong>1. 登录百度站长平台添加网站</strong></p>
<p>登录<a href="https://ziyuan.baidu.com/linksubmit/index">百度站长平台</a>，在站点管理中添加你自己的网站。</p>
<p>验证网站有三种方式：文件验证、HTML标签验证、CNAME验证。</p>
<p>第三种方式最简单，只要将它提供给你的那个xxxxx使用CNAME解析到xxx.baidu.com就可以了。也就是登录你的阿里云，把这个解析填进去就OK了。</p>
<p><strong>2. 提交链接</strong></p>
<p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎</p>
<pre><code>npm install hexo-generator-sitemap --save     
npm install hexo-generator-baidu-sitemap --save</code></pre>
<p>这时候你需要在你的根目录下<code>_config.xml</code>中看看url有没有改成你自己的：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219212919.png"></p>
<p>重新部署后，就可以在public文件夹下看到生成的sitemap.xml和baidusitemap.xml了。</p>
<p>然后就可以向百度提交你的站点地图了。</p>
<p>这里建议使用自动提交。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master/d40b6c29gy1fvrkstwp4pj20fc0kyq4n.jpg"></p>
<p><strong>ps:</strong> 百度收录比较慢，慢慢等个十天半个月再去<code>site:&lt;域名&gt;</code>看看有没有被收录。</p>
<h3 id="google的SEO"><a href="#google的SEO" class="headerlink" title="google的SEO"></a>google的SEO</h3><p>流程一样，google更简单，而且收录更快，进入<a href="https://search.google.com/search-console/sitemaps?resource_id=http://fangzh.top/&hl=zh-CN">google站点地图</a>，提交网站和sitemap.xml，就可以了。</p>
<p>如果你这个域名在google这里出了问题，那你就提交 <a href="http://yourname.github.io/">yourname.github.io</a>，这个链接，效果是一样的。</p>
<p>不出意外的话一天内google就能收录你的网站了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Ran08/file@master//20201219213019.png"></p>
<p>其他的搜索，如搜狗搜索，360搜索，流程是一样的，这里就不再赘述。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>到这里就基本做完了。其实都是参考别的博主的设置的，不一定仅限于butterfly主题，其他主题的设置也是大体相同的，所以如果你希望设置别的主题，那么仔细看一下这个主题的代码结构，也能够把上边的功能添加进去。</p>
<p>多看看别的博主的那些功能，如果有你能找到自己喜欢的功能，那么好好发动搜索技能，很快就能找到怎么做了。加油吧！</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
</search>
